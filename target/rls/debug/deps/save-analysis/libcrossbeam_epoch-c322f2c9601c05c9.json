{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10","program":"/Users/brandoncook/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"std\"","-C","metadata=c322f2c9601c05c9","-C","extra-filename=-c322f2c9601c05c9","--out-dir","/Users/brandoncook/Documents/Programming Projects/Rust_Sweeper/Rust_Sweeper/target/rls/debug/deps","-L","dependency=/Users/brandoncook/Documents/Programming Projects/Rust_Sweeper/Rust_Sweeper/target/rls/debug/deps","--extern","cfg_if=/Users/brandoncook/Documents/Programming Projects/Rust_Sweeper/Rust_Sweeper/target/rls/debug/deps/libcfg_if-602366ad92ff528c.rmeta","--extern","crossbeam_utils=/Users/brandoncook/Documents/Programming Projects/Rust_Sweeper/Rust_Sweeper/target/rls/debug/deps/libcrossbeam_utils-8248450a75b3c084.rmeta","--extern","memoffset=/Users/brandoncook/Documents/Programming Projects/Rust_Sweeper/Rust_Sweeper/target/rls/debug/deps/libmemoffset-5c075f5e52d3958a.rmeta","--extern","once_cell=/Users/brandoncook/Documents/Programming Projects/Rust_Sweeper/Rust_Sweeper/target/rls/debug/deps/libonce_cell-681de9d0a91a9f07.rmeta","--extern","scopeguard=/Users/brandoncook/Documents/Programming Projects/Rust_Sweeper/Rust_Sweeper/target/rls/debug/deps/libscopeguard-32a960a986c50460.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/brandoncook/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/brandoncook/Documents/Programming Projects/Rust_Sweeper/Rust_Sweeper/target/rls/debug/deps/libcrossbeam_epoch-c322f2c9601c05c9.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[10977858268917375217,0]},"crate_root":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src","external_crates":[{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12487381855063813090,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[13467426375328407781,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8659080599643642399,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1796284392260788893,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6983393744351521083,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3250764090425844219,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18067812386044263164,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6811782277583973308,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[17503089037827845404,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15332210557822847131,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[9019949222091243314,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17527021512170473469,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[9435842560075755921,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4270248722430337885,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[17099984453502544643,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[9380643280414578943,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15215801742335923154,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[2627650859626512514,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12189808815098789143,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[17477808844638938110,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","num":21,"id":{"name":"crossbeam_utils","disambiguator":[15829701307976981703,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","num":22,"id":{"name":"once_cell","disambiguator":[7357993068272951112,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","num":23,"id":{"name":"scopeguard","disambiguator":[17911558048917650642,0]}},{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","num":24,"id":{"name":"memoffset","disambiguator":[13465788379126019557,0]}}],"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":0,"byte_end":6324,"line_start":1,"line_end":169,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5873,"byte_end":5882,"line_start":153,"line_end":153,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5884,"byte_end":5890,"line_start":153,"line_end":153,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5892,"byte_end":5912,"line_start":153,"line_end":153,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":247},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5926,"byte_end":5931,"line_start":154,"line_end":154,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5933,"byte_end":5940,"line_start":154,"line_end":154,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5942,"byte_end":5948,"line_start":154,"line_end":154,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":373},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5995,"byte_end":6004,"line_start":156,"line_end":156,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6006,"byte_end":6017,"line_start":156,"line_end":156,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6050,"byte_end":6061,"line_start":157,"line_end":157,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":479},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6063,"byte_end":6068,"line_start":157,"line_end":157,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6132,"byte_end":6150,"line_start":160,"line_end":160,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6152,"byte_end":6173,"line_start":160,"line_end":160,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":897},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6281,"byte_end":6298,"line_start":167,"line_end":167,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":895},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6300,"byte_end":6309,"line_start":167,"line_end":167,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6311,"byte_end":6314,"line_start":167,"line_end":167,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":0,"byte_end":6324,"line_start":1,"line_end":169,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":356},{"krate":0,"index":399},{"krate":0,"index":438},{"krate":0,"index":457},{"krate":0,"index":509},{"krate":0,"index":655},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":875},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838101,"byte_end":11838119,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11837930,"byte_end":11837989,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838033,"byte_end":11838091,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838237,"byte_end":11838257,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838165,"byte_end":11838225,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":104},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838387,"byte_end":11838394,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838306,"byte_end":11838378,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":105},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838480,"byte_end":11838483,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838416,"byte_end":11838471,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838582,"byte_end":11838585,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CompareExchangeError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839594,"byte_end":11839615,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838798,"byte_end":11838850,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838851,"byte_end":11838854,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838855,"byte_end":11838946,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838947,"byte_end":11839039,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839040,"byte_end":11839043,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839044,"byte_end":11839109,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839110,"byte_end":11839113,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839114,"byte_end":11839208,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839209,"byte_end":11839235,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839236,"byte_end":11839328,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839329,"byte_end":11839357,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n\"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839401,"byte_end":11839583,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839681,"byte_end":11839688,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"fn success(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839622,"byte_end":11839673,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839906,"byte_end":11839913,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"fn failure(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839714,"byte_end":11839762,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839767,"byte_end":11839770,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839775,"byte_end":11839868,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839873,"byte_end":11839898,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11840021,"byte_end":11840028,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"success","qualname":"<Ordering as atomic::CompareAndSetOrdering>::success","value":"fn success(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":111},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11840004,"byte_end":11840013,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11840092,"byte_end":11840099,"line_start":86,"line_end":86,"column_start":8,"column_end":15},"name":"failure","qualname":"<Ordering as atomic::CompareAndSetOrdering>::failure","value":"fn failure(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":112},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11840075,"byte_end":11840084,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11840268,"byte_end":11840275,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"success","qualname":"<(Ordering, Ordering) as atomic::CompareAndSetOrdering>::success","value":"fn success(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":111},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11840251,"byte_end":11840260,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11840340,"byte_end":11840347,"line_start":99,"line_end":99,"column_start":8,"column_end":15},"name":"failure","qualname":"<(Ordering, Ordering) as atomic::CompareAndSetOrdering>::failure","value":"fn failure(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":112},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11840323,"byte_end":11840332,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":127},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842263,"byte_end":11842272,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11841290,"byte_end":11841337,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11841338,"byte_end":11841341,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11841342,"byte_end":11841440,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11841441,"byte_end":11841536,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11841537,"byte_end":11841599,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11841600,"byte_end":11841603,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11841604,"byte_end":11841696,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11841697,"byte_end":11841796,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11841797,"byte_end":11841897,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11841898,"byte_end":11841920,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11841921,"byte_end":11841924,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11841925,"byte_end":11842018,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842019,"byte_end":11842090,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842091,"byte_end":11842094,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842095,"byte_end":11842102,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842103,"byte_end":11842133,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842134,"byte_end":11842165,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842166,"byte_end":11842169,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842170,"byte_end":11842244,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842245,"byte_end":11842252,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":128},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842319,"byte_end":11842324,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842279,"byte_end":11842308,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842378,"byte_end":11842382,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842338,"byte_end":11842368,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842534,"byte_end":11842538,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842389,"byte_end":11842434,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842439,"byte_end":11842442,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842447,"byte_end":11842459,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842464,"byte_end":11842467,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842472,"byte_end":11842519,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842902,"byte_end":11842907,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842572,"byte_end":11842607,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842612,"byte_end":11842615,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842620,"byte_end":11842632,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842637,"byte_end":11842640,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842645,"byte_end":11842721,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842726,"byte_end":11842794,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842799,"byte_end":11842887,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843306,"byte_end":11843315,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842942,"byte_end":11842985,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842990,"byte_end":11842993,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11842998,"byte_end":11843010,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843015,"byte_end":11843018,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843023,"byte_end":11843099,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843104,"byte_end":11843172,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843177,"byte_end":11843267,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843272,"byte_end":11843291,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843728,"byte_end":11843732,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843354,"byte_end":11843407,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843412,"byte_end":11843415,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843420,"byte_end":11843432,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843437,"byte_end":11843440,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843445,"byte_end":11843521,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843526,"byte_end":11843594,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843599,"byte_end":11843689,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843694,"byte_end":11843713,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":138},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843785,"byte_end":11843790,"line_start":195,"line_end":195,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::<T as atomic::Pointable>::ALIGN","value":"usize","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843857,"byte_end":11843861,"line_start":199,"line_end":199,"column_start":15,"column_end":19},"name":"init","qualname":"<T as atomic::Pointable>::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":130},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843959,"byte_end":11843964,"line_start":203,"line_end":203,"column_start":15,"column_end":20},"name":"deref","qualname":"<T as atomic::Pointable>::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":131},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11844044,"byte_end":11844053,"line_start":207,"line_end":207,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"<T as atomic::Pointable>::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11844139,"byte_end":11844143,"line_start":211,"line_end":211,"column_start":15,"column_end":19},"name":"drop","qualname":"<T as atomic::Pointable>::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":135},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":153},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11845072,"byte_end":11845077,"line_start":247,"line_end":247,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::<[std::mem::MaybeUninit<T>] as atomic::Pointable>::ALIGN","value":"usize","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11845155,"byte_end":11845159,"line_start":251,"line_end":251,"column_start":15,"column_end":19},"name":"init","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":130},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11845611,"byte_end":11845616,"line_start":263,"line_end":263,"column_start":15,"column_end":20},"name":"deref","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":131},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11845794,"byte_end":11845803,"line_start":268,"line_end":268,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11845985,"byte_end":11845989,"line_start":273,"line_end":273,"column_start":15,"column_end":19},"name":"drop","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":135},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11846843,"byte_end":11846849,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11846325,"byte_end":11846389,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11846390,"byte_end":11846393,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11846394,"byte_end":11846492,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11846493,"byte_end":11846590,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11846591,"byte_end":11846662,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11846663,"byte_end":11846666,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11846667,"byte_end":11846747,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11846748,"byte_end":11846751,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11846752,"byte_end":11846831,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847392,"byte_end":11847395,"line_start":310,"line_end":310,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847102,"byte_end":11847184,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847189,"byte_end":11847192,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847197,"byte_end":11847211,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847216,"byte_end":11847219,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847224,"byte_end":11847231,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847236,"byte_end":11847268,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847273,"byte_end":11847276,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847281,"byte_end":11847311,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847316,"byte_end":11847368,"line_start":308,"line_end":308,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847373,"byte_end":11847380,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847796,"byte_end":11847800,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847498,"byte_end":11847580,"line_start":316,"line_end":316,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847585,"byte_end":11847588,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847593,"byte_end":11847607,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847612,"byte_end":11847615,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847620,"byte_end":11847627,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847632,"byte_end":11847664,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847669,"byte_end":11847672,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847677,"byte_end":11847715,"line_start":323,"line_end":323,"column_start":5,"column_end":43}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847720,"byte_end":11847772,"line_start":324,"line_end":324,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847777,"byte_end":11847784,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848381,"byte_end":11848385,"line_start":348,"line_end":348,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"const fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848105,"byte_end":11848143,"line_start":338,"line_end":338,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848148,"byte_end":11848151,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848156,"byte_end":11848170,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848175,"byte_end":11848178,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848183,"byte_end":11848190,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848195,"byte_end":11848227,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848232,"byte_end":11848235,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848240,"byte_end":11848274,"line_start":345,"line_end":345,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848279,"byte_end":11848286,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"cfg(all(not(crossbeam_no_const_fn_trait_bound), not(crossbeam_loom)))","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848291,"byte_end":11848363,"line_start":347,"line_end":347,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849290,"byte_end":11849294,"line_start":380,"line_end":380,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848775,"byte_end":11848820,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848825,"byte_end":11848828,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848833,"byte_end":11848923,"line_start":366,"line_end":366,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848928,"byte_end":11848942,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848947,"byte_end":11848950,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848955,"byte_end":11848969,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848974,"byte_end":11848977,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848982,"byte_end":11848989,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11848994,"byte_end":11849043,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849048,"byte_end":11849092,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849097,"byte_end":11849100,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849105,"byte_end":11849135,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849140,"byte_end":11849170,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849175,"byte_end":11849209,"line_start":377,"line_end":377,"column_start":5,"column_end":39}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849214,"byte_end":11849266,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849271,"byte_end":11849278,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850358,"byte_end":11850370,"line_start":406,"line_end":406,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849424,"byte_end":11849503,"line_start":384,"line_end":384,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849508,"byte_end":11849511,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849516,"byte_end":11849589,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849594,"byte_end":11849670,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849675,"byte_end":11849746,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849751,"byte_end":11849825,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849830,"byte_end":11849853,"line_start":390,"line_end":390,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849858,"byte_end":11849861,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849866,"byte_end":11849941,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11849946,"byte_end":11850020,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850025,"byte_end":11850059,"line_start":394,"line_end":394,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850064,"byte_end":11850067,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850072,"byte_end":11850086,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850091,"byte_end":11850094,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850099,"byte_end":11850106,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850111,"byte_end":11850160,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850165,"byte_end":11850168,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850173,"byte_end":11850203,"line_start":401,"line_end":401,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850208,"byte_end":11850238,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850243,"byte_end":11850277,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850282,"byte_end":11850334,"line_start":404,"line_end":404,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850339,"byte_end":11850346,"line_start":405,"line_end":405,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851130,"byte_end":11851135,"line_start":427,"line_end":427,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"fn store<P>(&Self, P, Ordering) where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850490,"byte_end":11850555,"line_start":410,"line_end":410,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850560,"byte_end":11850563,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850568,"byte_end":11850658,"line_start":412,"line_end":412,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850663,"byte_end":11850677,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850682,"byte_end":11850685,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850690,"byte_end":11850704,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850709,"byte_end":11850712,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850717,"byte_end":11850724,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850729,"byte_end":11850778,"line_start":418,"line_end":418,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850783,"byte_end":11850827,"line_start":419,"line_end":419,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850832,"byte_end":11850835,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850840,"byte_end":11850870,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/ # unsafe { drop(a.load(SeqCst, &crossbeam_epoch::pin()).into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850875,"byte_end":11850965,"line_start":422,"line_end":422,"column_start":5,"column_end":95}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11850970,"byte_end":11851006,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851011,"byte_end":11851049,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851054,"byte_end":11851106,"line_start":425,"line_end":425,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851111,"byte_end":11851118,"line_start":426,"line_end":426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851842,"byte_end":11851846,"line_start":448,"line_end":448,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"fn swap<'g, P>(&Self, P, Ordering, &'g Guard) -> Shared where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851242,"byte_end":11851330,"line_start":431,"line_end":431,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851335,"byte_end":11851348,"line_start":432,"line_end":432,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851353,"byte_end":11851356,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851361,"byte_end":11851451,"line_start":434,"line_end":434,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851456,"byte_end":11851470,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851475,"byte_end":11851478,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851483,"byte_end":11851497,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851502,"byte_end":11851505,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851510,"byte_end":11851517,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851522,"byte_end":11851579,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851584,"byte_end":11851628,"line_start":441,"line_end":441,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851633,"byte_end":11851636,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851641,"byte_end":11851671,"line_start":443,"line_end":443,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851676,"byte_end":11851706,"line_start":444,"line_end":444,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851711,"byte_end":11851761,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851766,"byte_end":11851818,"line_start":446,"line_end":446,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11851823,"byte_end":11851830,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853742,"byte_end":11853758,"line_start":483,"line_end":483,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"fn compare_exchange<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11852017,"byte_end":11852113,"line_start":452,"line_end":452,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11852118,"byte_end":11852212,"line_start":453,"line_end":453,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11852217,"byte_end":11852288,"line_start":454,"line_end":454,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11852293,"byte_end":11852296,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11852301,"byte_end":11852396,"line_start":456,"line_end":456,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11852401,"byte_end":11852492,"line_start":457,"line_end":457,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11852497,"byte_end":11852510,"line_start":458,"line_end":458,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11852515,"byte_end":11852518,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11852523,"byte_end":11852592,"line_start":460,"line_end":460,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11852597,"byte_end":11852678,"line_start":461,"line_end":461,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11852683,"byte_end":11852774,"line_start":462,"line_end":462,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11852779,"byte_end":11852869,"line_start":463,"line_end":463,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11852874,"byte_end":11852956,"line_start":464,"line_end":464,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11852961,"byte_end":11853039,"line_start":465,"line_end":465,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853044,"byte_end":11853124,"line_start":466,"line_end":466,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853129,"byte_end":11853195,"line_start":467,"line_end":467,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853200,"byte_end":11853203,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853208,"byte_end":11853222,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853227,"byte_end":11853230,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853235,"byte_end":11853242,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853247,"byte_end":11853311,"line_start":472,"line_end":472,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853316,"byte_end":11853360,"line_start":473,"line_end":473,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853365,"byte_end":11853368,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853373,"byte_end":11853403,"line_start":475,"line_end":475,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853408,"byte_end":11853411,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853416,"byte_end":11853446,"line_start":477,"line_end":477,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853451,"byte_end":11853488,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853493,"byte_end":11853572,"line_start":479,"line_end":479,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853577,"byte_end":11853658,"line_start":480,"line_end":480,"column_start":5,"column_end":86}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853663,"byte_end":11853718,"line_start":481,"line_end":481,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11853723,"byte_end":11853730,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856929,"byte_end":11856950,"line_start":560,"line_end":560,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"fn compare_exchange_weak<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11854420,"byte_end":11854516,"line_start":506,"line_end":506,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11854521,"byte_end":11854615,"line_start":507,"line_end":507,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11854620,"byte_end":11854691,"line_start":508,"line_end":508,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11854696,"byte_end":11854699,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11854704,"byte_end":11854799,"line_start":510,"line_end":510,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11854804,"byte_end":11854899,"line_start":511,"line_end":511,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11854904,"byte_end":11854994,"line_start":512,"line_end":512,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11854999,"byte_end":11855083,"line_start":513,"line_end":513,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855088,"byte_end":11855091,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855096,"byte_end":11855165,"line_start":515,"line_end":515,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855170,"byte_end":11855251,"line_start":516,"line_end":516,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855256,"byte_end":11855347,"line_start":517,"line_end":517,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855352,"byte_end":11855442,"line_start":518,"line_end":518,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855447,"byte_end":11855529,"line_start":519,"line_end":519,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855534,"byte_end":11855612,"line_start":520,"line_end":520,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855617,"byte_end":11855697,"line_start":521,"line_end":521,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855702,"byte_end":11855768,"line_start":522,"line_end":522,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855773,"byte_end":11855776,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855781,"byte_end":11855831,"line_start":524,"line_end":524,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855836,"byte_end":11855839,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855844,"byte_end":11855858,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855863,"byte_end":11855866,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855871,"byte_end":11855878,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855883,"byte_end":11855947,"line_start":529,"line_end":529,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11855952,"byte_end":11855996,"line_start":530,"line_end":530,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856001,"byte_end":11856004,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856009,"byte_end":11856039,"line_start":532,"line_end":532,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856044,"byte_end":11856074,"line_start":533,"line_end":533,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856079,"byte_end":11856082,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856087,"byte_end":11856122,"line_start":535,"line_end":535,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856127,"byte_end":11856167,"line_start":536,"line_end":536,"column_start":5,"column_end":45}},{"value":"/ # unsafe { drop(a.load(SeqCst, guard).into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856172,"byte_end":11856244,"line_start":537,"line_end":537,"column_start":5,"column_end":77}},{"value":"/ loop {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856249,"byte_end":11856259,"line_start":538,"line_end":538,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856264,"byte_end":11856336,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856341,"byte_end":11856363,"line_start":540,"line_end":540,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856368,"byte_end":11856392,"line_start":541,"line_end":541,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856397,"byte_end":11856419,"line_start":542,"line_end":542,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856424,"byte_end":11856437,"line_start":543,"line_end":543,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856442,"byte_end":11856467,"line_start":544,"line_end":544,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856472,"byte_end":11856506,"line_start":545,"line_end":545,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856511,"byte_end":11856541,"line_start":546,"line_end":546,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856546,"byte_end":11856559,"line_start":547,"line_end":547,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856564,"byte_end":11856573,"line_start":548,"line_end":548,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856578,"byte_end":11856583,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856588,"byte_end":11856591,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856596,"byte_end":11856637,"line_start":551,"line_end":551,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856642,"byte_end":11856652,"line_start":552,"line_end":552,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856657,"byte_end":11856741,"line_start":553,"line_end":553,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856746,"byte_end":11856773,"line_start":554,"line_end":554,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856778,"byte_end":11856821,"line_start":555,"line_end":555,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856826,"byte_end":11856835,"line_start":556,"line_end":556,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856840,"byte_end":11856845,"line_start":557,"line_end":557,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856850,"byte_end":11856905,"line_start":558,"line_end":558,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11856910,"byte_end":11856917,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859504,"byte_end":11859516,"line_start":623,"line_end":623,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<Atomic<T>>::fetch_update","value":"fn fetch_update<'g, F>(&Self, Ordering, Ordering, &'g Guard, F)\n-> Result<Shared, Shared> where F: FnMut(Shared) -> Option<Shared>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the pointer, and then applies a function to it that returns a new value.\n Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","sig":null,"attributes":[{"value":"/ Fetches the pointer, and then applies a function to it that returns a new value.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11857617,"byte_end":11857701,"line_start":583,"line_end":583,"column_start":5,"column_end":89}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11857706,"byte_end":11857800,"line_start":584,"line_end":584,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11857805,"byte_end":11857808,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Note that the given function may be called multiple times if the value has been changed by","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11857813,"byte_end":11857907,"line_start":586,"line_end":586,"column_start":5,"column_end":99}},{"value":"/ other threads in the meantime, as long as the function returns `Some(_)`, but the function","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11857912,"byte_end":11858006,"line_start":587,"line_end":587,"column_start":5,"column_end":99}},{"value":"/ will have been applied only once to the stored value.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858011,"byte_end":11858068,"line_start":588,"line_end":588,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858073,"byte_end":11858076,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ `fetch_update` takes two [`Ordering`] arguments to describe the memory","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858081,"byte_end":11858155,"line_start":590,"line_end":590,"column_start":5,"column_end":79}},{"value":"/ ordering of this operation. The first describes the required ordering for","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858160,"byte_end":11858237,"line_start":591,"line_end":591,"column_start":5,"column_end":82}},{"value":"/ when the operation finally succeeds while the second describes the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858242,"byte_end":11858312,"line_start":592,"line_end":592,"column_start":5,"column_end":75}},{"value":"/ required ordering for loads. These correspond to the success and failure","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858317,"byte_end":11858393,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"/ orderings of [`Atomic::compare_exchange`] respectively.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858398,"byte_end":11858457,"line_start":594,"line_end":594,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858462,"byte_end":11858465,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ Using [`Acquire`] as success ordering makes the store part of this","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858470,"byte_end":11858540,"line_start":596,"line_end":596,"column_start":5,"column_end":75}},{"value":"/ operation [`Relaxed`], and using [`Release`] makes the final successful","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858545,"byte_end":11858620,"line_start":597,"line_end":597,"column_start":5,"column_end":80}},{"value":"/ load [`Relaxed`]. The (failed) load ordering can only be [`SeqCst`],","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858625,"byte_end":11858697,"line_start":598,"line_end":598,"column_start":5,"column_end":77}},{"value":"/ [`Acquire`] or [`Relaxed`] and must be equivalent to or weaker than the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858702,"byte_end":11858777,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ success ordering.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858782,"byte_end":11858803,"line_start":600,"line_end":600,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858808,"byte_end":11858811,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ [`Relaxed`]: Ordering::Relaxed","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858816,"byte_end":11858850,"line_start":602,"line_end":602,"column_start":5,"column_end":39}},{"value":"/ [`Acquire`]: Ordering::Acquire","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858855,"byte_end":11858889,"line_start":603,"line_end":603,"column_start":5,"column_end":39}},{"value":"/ [`Release`]: Ordering::Release","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858894,"byte_end":11858928,"line_start":604,"line_end":604,"column_start":5,"column_end":39}},{"value":"/ [`SeqCst`]: Ordering::SeqCst","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858933,"byte_end":11858965,"line_start":605,"line_end":605,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858970,"byte_end":11858973,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858978,"byte_end":11858992,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11858997,"byte_end":11859000,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859005,"byte_end":11859012,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859017,"byte_end":11859066,"line_start":610,"line_end":610,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859071,"byte_end":11859115,"line_start":611,"line_end":611,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859120,"byte_end":11859123,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859128,"byte_end":11859158,"line_start":613,"line_end":613,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859163,"byte_end":11859193,"line_start":614,"line_end":614,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859198,"byte_end":11859201,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ let res1 = a.fetch_update(SeqCst, SeqCst, guard, |x| Some(x.with_tag(1)));","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859206,"byte_end":11859284,"line_start":616,"line_end":616,"column_start":5,"column_end":83}},{"value":"/ assert!(res1.is_ok());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859289,"byte_end":11859315,"line_start":617,"line_end":617,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859320,"byte_end":11859323,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let res2 = a.fetch_update(SeqCst, SeqCst, guard, |x| None);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859328,"byte_end":11859391,"line_start":619,"line_end":619,"column_start":5,"column_end":68}},{"value":"/ assert!(res2.is_err());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859396,"byte_end":11859423,"line_start":620,"line_end":620,"column_start":5,"column_end":32}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859428,"byte_end":11859480,"line_start":621,"line_end":621,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11859485,"byte_end":11859492,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861876,"byte_end":11861891,"line_start":685,"line_end":685,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860114,"byte_end":11860210,"line_start":643,"line_end":643,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860215,"byte_end":11860309,"line_start":644,"line_end":644,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860314,"byte_end":11860385,"line_start":645,"line_end":645,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860390,"byte_end":11860393,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860398,"byte_end":11860493,"line_start":647,"line_end":647,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860498,"byte_end":11860589,"line_start":648,"line_end":648,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860594,"byte_end":11860607,"line_start":649,"line_end":649,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860612,"byte_end":11860615,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860620,"byte_end":11860705,"line_start":651,"line_end":651,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860710,"byte_end":11860741,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860746,"byte_end":11860749,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860754,"byte_end":11860791,"line_start":654,"line_end":654,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860796,"byte_end":11860799,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860804,"byte_end":11860892,"line_start":656,"line_end":656,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860897,"byte_end":11860918,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860923,"byte_end":11860926,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860931,"byte_end":11860963,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11860968,"byte_end":11861000,"line_start":660,"line_end":660,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861005,"byte_end":11861037,"line_start":661,"line_end":661,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861042,"byte_end":11861074,"line_start":662,"line_end":662,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861079,"byte_end":11861111,"line_start":663,"line_end":663,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861116,"byte_end":11861148,"line_start":664,"line_end":664,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861153,"byte_end":11861184,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861189,"byte_end":11861192,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861197,"byte_end":11861211,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861216,"byte_end":11861219,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861224,"byte_end":11861231,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861236,"byte_end":11861263,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861268,"byte_end":11861332,"line_start":671,"line_end":671,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861337,"byte_end":11861381,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861386,"byte_end":11861389,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861394,"byte_end":11861424,"line_start":674,"line_end":674,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861429,"byte_end":11861432,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861437,"byte_end":11861467,"line_start":676,"line_end":676,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861472,"byte_end":11861509,"line_start":677,"line_end":677,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861514,"byte_end":11861584,"line_start":678,"line_end":678,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861589,"byte_end":11861661,"line_start":679,"line_end":679,"column_start":5,"column_end":77}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861666,"byte_end":11861721,"line_start":680,"line_end":680,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861726,"byte_end":11861733,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861785,"byte_end":11861805,"line_start":683,"line_end":683,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11861810,"byte_end":11861864,"line_start":684,"line_end":684,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864797,"byte_end":11864817,"line_start":764,"line_end":764,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11862234,"byte_end":11862330,"line_start":699,"line_end":699,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11862335,"byte_end":11862429,"line_start":700,"line_end":700,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11862434,"byte_end":11862505,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11862510,"byte_end":11862513,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11862518,"byte_end":11862612,"line_start":703,"line_end":703,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11862617,"byte_end":11862712,"line_start":704,"line_end":704,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11862717,"byte_end":11862807,"line_start":705,"line_end":705,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11862812,"byte_end":11862896,"line_start":706,"line_end":706,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11862901,"byte_end":11862904,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11862909,"byte_end":11862994,"line_start":708,"line_end":708,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11862999,"byte_end":11863030,"line_start":709,"line_end":709,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863035,"byte_end":11863038,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863043,"byte_end":11863091,"line_start":711,"line_end":711,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863096,"byte_end":11863099,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863104,"byte_end":11863146,"line_start":713,"line_end":713,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863151,"byte_end":11863154,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863159,"byte_end":11863257,"line_start":715,"line_end":715,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863262,"byte_end":11863283,"line_start":716,"line_end":716,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863288,"byte_end":11863291,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863296,"byte_end":11863328,"line_start":718,"line_end":718,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863333,"byte_end":11863365,"line_start":719,"line_end":719,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863370,"byte_end":11863402,"line_start":720,"line_end":720,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863407,"byte_end":11863439,"line_start":721,"line_end":721,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863444,"byte_end":11863476,"line_start":722,"line_end":722,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863481,"byte_end":11863513,"line_start":723,"line_end":723,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863518,"byte_end":11863549,"line_start":724,"line_end":724,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863554,"byte_end":11863557,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863562,"byte_end":11863576,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863581,"byte_end":11863584,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863589,"byte_end":11863596,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863601,"byte_end":11863628,"line_start":729,"line_end":729,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863633,"byte_end":11863697,"line_start":730,"line_end":730,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863702,"byte_end":11863746,"line_start":731,"line_end":731,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863751,"byte_end":11863754,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863759,"byte_end":11863789,"line_start":733,"line_end":733,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863794,"byte_end":11863824,"line_start":734,"line_end":734,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863829,"byte_end":11863832,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863837,"byte_end":11863872,"line_start":736,"line_end":736,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863877,"byte_end":11863917,"line_start":737,"line_end":737,"column_start":5,"column_end":45}},{"value":"/ # unsafe { drop(a.load(SeqCst, guard).into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863922,"byte_end":11863994,"line_start":738,"line_end":738,"column_start":5,"column_end":77}},{"value":"/ loop {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11863999,"byte_end":11864009,"line_start":739,"line_end":739,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864014,"byte_end":11864077,"line_start":740,"line_end":740,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864082,"byte_end":11864104,"line_start":741,"line_end":741,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864109,"byte_end":11864133,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864138,"byte_end":11864160,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864165,"byte_end":11864178,"line_start":744,"line_end":744,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864183,"byte_end":11864208,"line_start":745,"line_end":745,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864213,"byte_end":11864247,"line_start":746,"line_end":746,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864252,"byte_end":11864282,"line_start":747,"line_end":747,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864287,"byte_end":11864300,"line_start":748,"line_end":748,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864305,"byte_end":11864314,"line_start":749,"line_end":749,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864319,"byte_end":11864324,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864329,"byte_end":11864332,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864337,"byte_end":11864378,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864383,"byte_end":11864393,"line_start":753,"line_end":753,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864398,"byte_end":11864473,"line_start":754,"line_end":754,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864478,"byte_end":11864505,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864510,"byte_end":11864553,"line_start":756,"line_end":756,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864558,"byte_end":11864567,"line_start":757,"line_end":757,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864572,"byte_end":11864577,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864582,"byte_end":11864637,"line_start":759,"line_end":759,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864642,"byte_end":11864649,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864701,"byte_end":11864721,"line_start":762,"line_end":762,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11864726,"byte_end":11864785,"line_start":763,"line_end":763,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865896,"byte_end":11865905,"line_start":797,"line_end":797,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865165,"byte_end":11865204,"line_start":778,"line_end":778,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865209,"byte_end":11865212,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865217,"byte_end":11865311,"line_start":780,"line_end":780,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865316,"byte_end":11865372,"line_start":781,"line_end":781,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865377,"byte_end":11865380,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865385,"byte_end":11865475,"line_start":783,"line_end":783,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865480,"byte_end":11865494,"line_start":784,"line_end":784,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865499,"byte_end":11865502,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865507,"byte_end":11865521,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865526,"byte_end":11865529,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865534,"byte_end":11865541,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865546,"byte_end":11865603,"line_start":789,"line_end":789,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865608,"byte_end":11865652,"line_start":790,"line_end":790,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865657,"byte_end":11865660,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865665,"byte_end":11865725,"line_start":792,"line_end":792,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865730,"byte_end":11865760,"line_start":793,"line_end":793,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865765,"byte_end":11865820,"line_start":794,"line_end":794,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865825,"byte_end":11865872,"line_start":795,"line_end":795,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11865877,"byte_end":11865884,"line_start":796,"line_end":796,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866804,"byte_end":11866812,"line_start":820,"line_end":820,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866076,"byte_end":11866114,"line_start":801,"line_end":801,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866119,"byte_end":11866122,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866127,"byte_end":11866220,"line_start":803,"line_end":803,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866225,"byte_end":11866281,"line_start":804,"line_end":804,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866286,"byte_end":11866289,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866294,"byte_end":11866384,"line_start":806,"line_end":806,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866389,"byte_end":11866403,"line_start":807,"line_end":807,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866408,"byte_end":11866411,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866416,"byte_end":11866430,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866435,"byte_end":11866438,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866443,"byte_end":11866450,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866455,"byte_end":11866512,"line_start":812,"line_end":812,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866517,"byte_end":11866561,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866566,"byte_end":11866569,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866574,"byte_end":11866634,"line_start":815,"line_end":815,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866639,"byte_end":11866669,"line_start":816,"line_end":816,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866674,"byte_end":11866728,"line_start":817,"line_end":817,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866733,"byte_end":11866780,"line_start":818,"line_end":818,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866785,"byte_end":11866792,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867712,"byte_end":11867721,"line_start":843,"line_end":843,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11866981,"byte_end":11867020,"line_start":824,"line_end":824,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867025,"byte_end":11867028,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867033,"byte_end":11867127,"line_start":826,"line_end":826,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867132,"byte_end":11867188,"line_start":827,"line_end":827,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867193,"byte_end":11867196,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867201,"byte_end":11867291,"line_start":829,"line_end":829,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867296,"byte_end":11867310,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867315,"byte_end":11867318,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867323,"byte_end":11867337,"line_start":832,"line_end":832,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867342,"byte_end":11867345,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867350,"byte_end":11867357,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867362,"byte_end":11867419,"line_start":835,"line_end":835,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867424,"byte_end":11867468,"line_start":836,"line_end":836,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867473,"byte_end":11867476,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867481,"byte_end":11867541,"line_start":838,"line_end":838,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867546,"byte_end":11867576,"line_start":839,"line_end":839,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867581,"byte_end":11867636,"line_start":840,"line_end":840,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867641,"byte_end":11867688,"line_start":841,"line_end":841,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867693,"byte_end":11867700,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11869018,"byte_end":11869028,"line_start":881,"line_end":881,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867891,"byte_end":11867926,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867931,"byte_end":11867934,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11867939,"byte_end":11868028,"line_start":849,"line_end":849,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868033,"byte_end":11868119,"line_start":850,"line_end":850,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868124,"byte_end":11868159,"line_start":851,"line_end":851,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868164,"byte_end":11868167,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868172,"byte_end":11868184,"line_start":853,"line_end":853,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868189,"byte_end":11868192,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868197,"byte_end":11868256,"line_start":855,"line_end":855,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868261,"byte_end":11868264,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868269,"byte_end":11868281,"line_start":857,"line_end":857,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868286,"byte_end":11868289,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868294,"byte_end":11868381,"line_start":859,"line_end":859,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868386,"byte_end":11868419,"line_start":860,"line_end":860,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868424,"byte_end":11868427,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868432,"byte_end":11868446,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868451,"byte_end":11868454,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868459,"byte_end":11868470,"line_start":864,"line_end":864,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868475,"byte_end":11868494,"line_start":865,"line_end":865,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868499,"byte_end":11868533,"line_start":866,"line_end":866,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868538,"byte_end":11868564,"line_start":867,"line_end":867,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868569,"byte_end":11868596,"line_start":868,"line_end":868,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868601,"byte_end":11868606,"line_start":869,"line_end":869,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868611,"byte_end":11868614,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868619,"byte_end":11868652,"line_start":871,"line_end":871,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868657,"byte_end":11868685,"line_start":872,"line_end":872,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868690,"byte_end":11868784,"line_start":873,"line_end":873,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868789,"byte_end":11868836,"line_start":874,"line_end":874,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868841,"byte_end":11868861,"line_start":875,"line_end":875,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868866,"byte_end":11868945,"line_start":876,"line_end":876,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868950,"byte_end":11868963,"line_start":877,"line_end":877,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868968,"byte_end":11868977,"line_start":878,"line_end":878,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868982,"byte_end":11868987,"line_start":879,"line_end":879,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11868992,"byte_end":11868999,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870715,"byte_end":11870729,"line_start":928,"line_end":928,"column_start":19,"column_end":33},"name":"try_into_owned","qualname":"<Atomic<T>>::try_into_owned","value":"unsafe fn try_into_owned(Self) -> Option<Owned<T>>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee if it is non-null.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee if it is non-null.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11869496,"byte_end":11869549,"line_start":895,"line_end":895,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11869554,"byte_end":11869557,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11869562,"byte_end":11869651,"line_start":897,"line_end":897,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11869656,"byte_end":11869742,"line_start":898,"line_end":898,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11869747,"byte_end":11869782,"line_start":899,"line_end":899,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11869787,"byte_end":11869790,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11869795,"byte_end":11869807,"line_start":901,"line_end":901,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11869812,"byte_end":11869815,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11869820,"byte_end":11869907,"line_start":903,"line_end":903,"column_start":5,"column_end":92}},{"value":"/ reference to the same object, or the pointer is null.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11869912,"byte_end":11869969,"line_start":904,"line_end":904,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11869974,"byte_end":11869977,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11869982,"byte_end":11869996,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870001,"byte_end":11870004,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870009,"byte_end":11870020,"line_start":908,"line_end":908,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870025,"byte_end":11870044,"line_start":909,"line_end":909,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870049,"byte_end":11870083,"line_start":910,"line_end":910,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870088,"byte_end":11870114,"line_start":911,"line_end":911,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870119,"byte_end":11870146,"line_start":912,"line_end":912,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870151,"byte_end":11870156,"line_start":913,"line_end":913,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870161,"byte_end":11870164,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870169,"byte_end":11870202,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870207,"byte_end":11870235,"line_start":916,"line_end":916,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870240,"byte_end":11870334,"line_start":917,"line_end":917,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves, but it may be null, so we have to be careful.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870339,"byte_end":11870432,"line_start":918,"line_end":918,"column_start":5,"column_end":98}},{"value":"/         let old = mem::replace(&mut self.ptr, Atomic::null());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870437,"byte_end":11870503,"line_start":919,"line_end":919,"column_start":5,"column_end":71}},{"value":"/         unsafe {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870508,"byte_end":11870528,"line_start":920,"line_end":920,"column_start":5,"column_end":25}},{"value":"/             if let Some(x) = old.try_into_owned() {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870533,"byte_end":11870588,"line_start":921,"line_end":921,"column_start":5,"column_end":60}},{"value":"/                 drop(x)","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870593,"byte_end":11870620,"line_start":922,"line_end":922,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870625,"byte_end":11870642,"line_start":923,"line_end":923,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870647,"byte_end":11870660,"line_start":924,"line_end":924,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870665,"byte_end":11870674,"line_start":925,"line_end":925,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870679,"byte_end":11870684,"line_start":926,"line_end":926,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11870689,"byte_end":11870696,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11871154,"byte_end":11871157,"line_start":943,"line_end":943,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Atomic<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11871507,"byte_end":11871510,"line_start":955,"line_end":955,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Atomic<T> as std::fmt::Pointer>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10134},"children":[],"decl_id":{"krate":2,"index":10135},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11871976,"byte_end":11871981,"line_start":967,"line_end":967,"column_start":8,"column_end":13},"name":"clone","qualname":"<Atomic<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":" Returns a copy of the atomic value.","sig":null,"attributes":[{"value":"/ Returns a copy of the atomic value.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11871798,"byte_end":11871837,"line_start":963,"line_end":963,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11871842,"byte_end":11871845,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ Note that a `Relaxed` load is used here. If you need synchronization, use it with other","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11871850,"byte_end":11871941,"line_start":965,"line_end":965,"column_start":5,"column_end":96}},{"value":"/ atomics or fences.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11871946,"byte_end":11871968,"line_start":966,"line_end":966,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872154,"byte_end":11872161,"line_start":974,"line_end":974,"column_start":8,"column_end":15},"name":"default","qualname":"<Atomic<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872555,"byte_end":11872559,"line_start":990,"line_end":990,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Owned<T>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new atomic pointer pointing to `owned`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `owned`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872269,"byte_end":11872322,"line_start":980,"line_end":980,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872327,"byte_end":11872330,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872335,"byte_end":11872349,"line_start":982,"line_end":982,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872354,"byte_end":11872357,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872362,"byte_end":11872369,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872374,"byte_end":11872415,"line_start":985,"line_end":985,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872420,"byte_end":11872423,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Owned::new(1234));","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872428,"byte_end":11872478,"line_start":987,"line_end":987,"column_start":5,"column_end":55}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872483,"byte_end":11872535,"line_start":988,"line_end":988,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872540,"byte_end":11872547,"line_start":989,"line_end":989,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872730,"byte_end":11872734,"line_start":998,"line_end":998,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Box<T>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872839,"byte_end":11872843,"line_start":1004,"line_end":1004,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873195,"byte_end":11873199,"line_start":1019,"line_end":1019,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Shared) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new atomic pointer pointing to `ptr`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `ptr`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872962,"byte_end":11873013,"line_start":1010,"line_end":1010,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873018,"byte_end":11873021,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873026,"byte_end":11873040,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873045,"byte_end":11873048,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873053,"byte_end":11873060,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Shared};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873065,"byte_end":11873107,"line_start":1015,"line_end":1015,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873112,"byte_end":11873115,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::<i32>::null());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873120,"byte_end":11873175,"line_start":1017,"line_end":1017,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873180,"byte_end":11873187,"line_start":1018,"line_end":1018,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873559,"byte_end":11873563,"line_start":1035,"line_end":1035,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(*const T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new atomic pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `raw`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873317,"byte_end":11873368,"line_start":1025,"line_end":1025,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873373,"byte_end":11873376,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873381,"byte_end":11873395,"line_start":1027,"line_end":1027,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873400,"byte_end":11873403,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873408,"byte_end":11873415,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"/ use std::ptr;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873420,"byte_end":11873437,"line_start":1030,"line_end":1030,"column_start":5,"column_end":22}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873442,"byte_end":11873474,"line_start":1031,"line_end":1031,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873479,"byte_end":11873482,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(ptr::null::<i32>());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873487,"byte_end":11873539,"line_start":1033,"line_end":1033,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873544,"byte_end":11873551,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":243},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873700,"byte_end":11873707,"line_start":1041,"line_end":1041,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T>","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873637,"byte_end":11873689,"line_start":1040,"line_end":1040,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873799,"byte_end":11873809,"line_start":1043,"line_end":1043,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873737,"byte_end":11873791,"line_start":1042,"line_end":1042,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874116,"byte_end":11874126,"line_start":1051,"line_end":1051,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873831,"byte_end":11873895,"line_start":1045,"line_end":1045,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873900,"byte_end":11873903,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873908,"byte_end":11873920,"line_start":1047,"line_end":1047,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873925,"byte_end":11873928,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873933,"byte_end":11874028,"line_start":1049,"line_end":1049,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874033,"byte_end":11874101,"line_start":1050,"line_end":1050,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":247},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874392,"byte_end":11874397,"line_start":1060,"line_end":1060,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874152,"byte_end":11874187,"line_start":1054,"line_end":1054,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874188,"byte_end":11874191,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874192,"byte_end":11874234,"line_start":1056,"line_end":1056,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874235,"byte_end":11874238,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874239,"byte_end":11874337,"line_start":1058,"line_end":1058,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874338,"byte_end":11874380,"line_start":1059,"line_end":1059,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874552,"byte_end":11874562,"line_start":1067,"line_end":1067,"column_start":8,"column_end":18},"name":"into_usize","qualname":"<Owned<T> as atomic::Pointer>::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":243},"children":[],"decl_id":{"krate":0,"index":245},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874535,"byte_end":11874544,"line_start":1066,"line_end":1066,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874837,"byte_end":11874847,"line_start":1079,"line_end":1079,"column_start":15,"column_end":25},"name":"from_usize","qualname":"<Owned<T> as atomic::Pointer>::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":243},"children":[],"decl_id":{"krate":0,"index":246},"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874661,"byte_end":11874725,"line_start":1073,"line_end":1073,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874730,"byte_end":11874733,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874738,"byte_end":11874750,"line_start":1075,"line_end":1075,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874755,"byte_end":11874758,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ Panics if the data is zero in debug mode.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874763,"byte_end":11874808,"line_start":1077,"line_end":1077,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874813,"byte_end":11874822,"line_start":1078,"line_end":1078,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875795,"byte_end":11875803,"line_start":1111,"line_end":1111,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875047,"byte_end":11875097,"line_start":1089,"line_end":1089,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875102,"byte_end":11875105,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875110,"byte_end":11875202,"line_start":1091,"line_end":1091,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875207,"byte_end":11875300,"line_start":1092,"line_end":1092,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875305,"byte_end":11875330,"line_start":1093,"line_end":1093,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875335,"byte_end":11875338,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875343,"byte_end":11875355,"line_start":1095,"line_end":1095,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875360,"byte_end":11875363,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875368,"byte_end":11875412,"line_start":1097,"line_end":1097,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875417,"byte_end":11875420,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875425,"byte_end":11875437,"line_start":1099,"line_end":1099,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875442,"byte_end":11875445,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875450,"byte_end":11875546,"line_start":1101,"line_end":1101,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875551,"byte_end":11875598,"line_start":1102,"line_end":1102,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875603,"byte_end":11875606,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875611,"byte_end":11875625,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875630,"byte_end":11875633,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875638,"byte_end":11875645,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875650,"byte_end":11875681,"line_start":1107,"line_end":1107,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875686,"byte_end":11875689,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875694,"byte_end":11875764,"line_start":1109,"line_end":1109,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875769,"byte_end":11875776,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876201,"byte_end":11876209,"line_start":1128,"line_end":1128,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875938,"byte_end":11875982,"line_start":1117,"line_end":1117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875987,"byte_end":11875990,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875995,"byte_end":11876009,"line_start":1119,"line_end":1119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876014,"byte_end":11876017,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876022,"byte_end":11876029,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876034,"byte_end":11876065,"line_start":1122,"line_end":1122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876070,"byte_end":11876073,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876078,"byte_end":11876107,"line_start":1124,"line_end":1124,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876112,"byte_end":11876147,"line_start":1125,"line_end":1125,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876152,"byte_end":11876177,"line_start":1126,"line_end":1126,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876182,"byte_end":11876189,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876598,"byte_end":11876601,"line_start":1143,"line_end":1143,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876368,"byte_end":11876449,"line_start":1134,"line_end":1134,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876454,"byte_end":11876457,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876462,"byte_end":11876476,"line_start":1136,"line_end":1136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876481,"byte_end":11876484,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876489,"byte_end":11876496,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876501,"byte_end":11876532,"line_start":1139,"line_end":1139,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876537,"byte_end":11876540,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876545,"byte_end":11876574,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876579,"byte_end":11876586,"line_start":1142,"line_end":1142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876940,"byte_end":11876944,"line_start":1158,"line_end":1158,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876702,"byte_end":11876783,"line_start":1149,"line_end":1149,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876788,"byte_end":11876791,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876796,"byte_end":11876810,"line_start":1151,"line_end":1151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876815,"byte_end":11876818,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876823,"byte_end":11876830,"line_start":1153,"line_end":1153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876835,"byte_end":11876866,"line_start":1154,"line_end":1154,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876871,"byte_end":11876874,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876879,"byte_end":11876916,"line_start":1156,"line_end":1156,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876921,"byte_end":11876928,"line_start":1157,"line_end":1157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877422,"byte_end":11877433,"line_start":1175,"line_end":1175,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877036,"byte_end":11877085,"line_start":1162,"line_end":1162,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877090,"byte_end":11877093,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877098,"byte_end":11877112,"line_start":1164,"line_end":1164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877117,"byte_end":11877120,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877125,"byte_end":11877132,"line_start":1166,"line_end":1166,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877137,"byte_end":11877185,"line_start":1167,"line_end":1167,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877190,"byte_end":11877193,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877198,"byte_end":11877227,"line_start":1169,"line_end":1169,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877232,"byte_end":11877262,"line_start":1170,"line_end":1170,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877267,"byte_end":11877300,"line_start":1171,"line_end":1171,"column_start":5,"column_end":38}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877305,"byte_end":11877357,"line_start":1172,"line_end":1172,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877362,"byte_end":11877369,"line_start":1173,"line_end":1173,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877374,"byte_end":11877410,"line_start":1174,"line_end":1174,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877753,"byte_end":11877756,"line_start":1188,"line_end":1188,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877545,"byte_end":11877591,"line_start":1179,"line_end":1179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877596,"byte_end":11877599,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877604,"byte_end":11877618,"line_start":1181,"line_end":1181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877623,"byte_end":11877626,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877631,"byte_end":11877638,"line_start":1183,"line_end":1183,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877643,"byte_end":11877674,"line_start":1184,"line_end":1184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877679,"byte_end":11877682,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877687,"byte_end":11877729,"line_start":1186,"line_end":1186,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877734,"byte_end":11877741,"line_start":1187,"line_end":1187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878229,"byte_end":11878237,"line_start":1206,"line_end":1206,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877852,"byte_end":11877942,"line_start":1193,"line_end":1193,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877947,"byte_end":11877985,"line_start":1194,"line_end":1194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877990,"byte_end":11877993,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11877998,"byte_end":11878012,"line_start":1196,"line_end":1196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878017,"byte_end":11878020,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878025,"byte_end":11878032,"line_start":1198,"line_end":1198,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878037,"byte_end":11878068,"line_start":1199,"line_end":1199,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878073,"byte_end":11878076,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878081,"byte_end":11878110,"line_start":1201,"line_end":1201,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878115,"byte_end":11878142,"line_start":1202,"line_end":1202,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878147,"byte_end":11878173,"line_start":1203,"line_end":1203,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878178,"byte_end":11878205,"line_start":1204,"line_end":1204,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878210,"byte_end":11878217,"line_start":1205,"line_end":1205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878437,"byte_end":11878441,"line_start":1213,"line_end":1213,"column_start":8,"column_end":12},"name":"drop","qualname":"<Owned<T> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878632,"byte_end":11878635,"line_start":1222,"line_end":1222,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Owned<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878915,"byte_end":11878920,"line_start":1233,"line_end":1233,"column_start":8,"column_end":13},"name":"clone","qualname":"<Owned<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879083,"byte_end":11879088,"line_start":1241,"line_end":1241,"column_start":8,"column_end":13},"name":"deref","qualname":"<Owned<T> as std::ops::Deref>::deref","value":"fn deref(&Self) -> &T","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879259,"byte_end":11879268,"line_start":1248,"line_end":1248,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<Owned<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879430,"byte_end":11879434,"line_start":1255,"line_end":1255,"column_start":8,"column_end":12},"name":"from","qualname":"<Owned<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879856,"byte_end":11879860,"line_start":1274,"line_end":1274,"column_start":8,"column_end":12},"name":"from","qualname":"<Owned<T> as std::convert::From>::from","value":"fn from(Box<T>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new owned pointer pointing to `b`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `b`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879522,"byte_end":11879570,"line_start":1261,"line_end":1261,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879575,"byte_end":11879578,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879583,"byte_end":11879595,"line_start":1263,"line_end":1263,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879600,"byte_end":11879603,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ Panics if the pointer (the `Box`) is not properly aligned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879608,"byte_end":11879670,"line_start":1265,"line_end":1265,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879675,"byte_end":11879678,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879683,"byte_end":11879697,"line_start":1267,"line_end":1267,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879702,"byte_end":11879705,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879710,"byte_end":11879717,"line_start":1269,"line_end":1269,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879722,"byte_end":11879753,"line_start":1270,"line_end":1270,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879758,"byte_end":11879761,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879766,"byte_end":11879836,"line_start":1272,"line_end":1272,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879841,"byte_end":11879848,"line_start":1273,"line_end":1273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880003,"byte_end":11880009,"line_start":1280,"line_end":1280,"column_start":8,"column_end":14},"name":"borrow","qualname":"<Owned<T> as std::borrow::Borrow>::borrow","value":"fn borrow(&Self) -> &T","parent":{"krate":2,"index":2776},"children":[],"decl_id":{"krate":2,"index":2778},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880118,"byte_end":11880128,"line_start":1286,"line_end":1286,"column_start":8,"column_end":18},"name":"borrow_mut","qualname":"<Owned<T> as std::borrow::BorrowMut>::borrow_mut","value":"fn borrow_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":2779},"children":[],"decl_id":{"krate":2,"index":2781},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880245,"byte_end":11880251,"line_start":1292,"line_end":1292,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Owned<T> as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &T","parent":{"krate":2,"index":3076},"children":[],"decl_id":{"krate":2,"index":3078},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880356,"byte_end":11880362,"line_start":1298,"line_end":1298,"column_start":8,"column_end":14},"name":"as_mut","qualname":"<Owned<T> as std::convert::AsMut>::as_mut","value":"fn as_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3079},"children":[],"decl_id":{"krate":2,"index":3081},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880699,"byte_end":11880705,"line_start":1309,"line_end":1309,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880420,"byte_end":11880473,"line_start":1303,"line_end":1303,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880474,"byte_end":11880477,"line_start":1304,"line_end":1304,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880478,"byte_end":11880541,"line_start":1305,"line_end":1305,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880542,"byte_end":11880545,"line_start":1306,"line_end":1306,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880546,"byte_end":11880644,"line_start":1307,"line_end":1307,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880645,"byte_end":11880687,"line_start":1308,"line_end":1308,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880867,"byte_end":11880872,"line_start":1315,"line_end":1315,"column_start":8,"column_end":13},"name":"clone","qualname":"<Shared as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881122,"byte_end":11881132,"line_start":1327,"line_end":1327,"column_start":8,"column_end":18},"name":"into_usize","qualname":"<Shared as atomic::Pointer>::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":243},"children":[],"decl_id":{"krate":0,"index":245},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881105,"byte_end":11881114,"line_start":1326,"line_end":1326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881203,"byte_end":11881213,"line_start":1332,"line_end":1332,"column_start":15,"column_end":25},"name":"from_usize","qualname":"<Shared as atomic::Pointer>::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":243},"children":[],"decl_id":{"krate":0,"index":246},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881179,"byte_end":11881188,"line_start":1331,"line_end":1331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881884,"byte_end":11881890,"line_start":1358,"line_end":1358,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881357,"byte_end":11881417,"line_start":1341,"line_end":1341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881422,"byte_end":11881425,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881430,"byte_end":11881444,"line_start":1343,"line_end":1343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881449,"byte_end":11881452,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881457,"byte_end":11881464,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881469,"byte_end":11881525,"line_start":1346,"line_end":1346,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881530,"byte_end":11881574,"line_start":1347,"line_end":1347,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881579,"byte_end":11881582,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881587,"byte_end":11881616,"line_start":1349,"line_end":1349,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881621,"byte_end":11881651,"line_start":1350,"line_end":1350,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881656,"byte_end":11881684,"line_start":1351,"line_end":1351,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881689,"byte_end":11881692,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881697,"byte_end":11881727,"line_start":1353,"line_end":1353,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881732,"byte_end":11881766,"line_start":1354,"line_end":1354,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881771,"byte_end":11881803,"line_start":1355,"line_end":1355,"column_start":5,"column_end":37}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881808,"byte_end":11881860,"line_start":1356,"line_end":1356,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881865,"byte_end":11881872,"line_start":1357,"line_end":1357,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882267,"byte_end":11882271,"line_start":1375,"line_end":1375,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882051,"byte_end":11882082,"line_start":1365,"line_end":1365,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882087,"byte_end":11882090,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882095,"byte_end":11882109,"line_start":1367,"line_end":1367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882114,"byte_end":11882117,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882122,"byte_end":11882129,"line_start":1369,"line_end":1369,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882134,"byte_end":11882166,"line_start":1370,"line_end":1370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882171,"byte_end":11882174,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882179,"byte_end":11882213,"line_start":1372,"line_end":1372,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882218,"byte_end":11882243,"line_start":1373,"line_end":1373,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882248,"byte_end":11882255,"line_start":1374,"line_end":1374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882885,"byte_end":11882892,"line_start":1397,"line_end":1397,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882386,"byte_end":11882428,"line_start":1382,"line_end":1382,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882433,"byte_end":11882436,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882441,"byte_end":11882455,"line_start":1384,"line_end":1384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882460,"byte_end":11882463,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882468,"byte_end":11882475,"line_start":1386,"line_end":1386,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882480,"byte_end":11882536,"line_start":1387,"line_end":1387,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882541,"byte_end":11882585,"line_start":1388,"line_end":1388,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882590,"byte_end":11882593,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882598,"byte_end":11882625,"line_start":1390,"line_end":1390,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882630,"byte_end":11882660,"line_start":1391,"line_end":1391,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882665,"byte_end":11882710,"line_start":1392,"line_end":1392,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882715,"byte_end":11882753,"line_start":1393,"line_end":1393,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882758,"byte_end":11882804,"line_start":1394,"line_end":1394,"column_start":5,"column_end":51}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882809,"byte_end":11882861,"line_start":1395,"line_end":1395,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882866,"byte_end":11882873,"line_start":1396,"line_end":1396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884229,"byte_end":11884234,"line_start":1434,"line_end":1434,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882992,"byte_end":11883021,"line_start":1402,"line_end":1402,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883026,"byte_end":11883029,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883034,"byte_end":11883112,"line_start":1404,"line_end":1404,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883117,"byte_end":11883120,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883125,"byte_end":11883137,"line_start":1406,"line_end":1406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883142,"byte_end":11883145,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883150,"byte_end":11883235,"line_start":1408,"line_end":1408,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883240,"byte_end":11883243,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883248,"byte_end":11883339,"line_start":1410,"line_end":1410,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883344,"byte_end":11883393,"line_start":1411,"line_end":1411,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883398,"byte_end":11883401,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883406,"byte_end":11883478,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883483,"byte_end":11883558,"line_start":1414,"line_end":1414,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883563,"byte_end":11883566,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883571,"byte_end":11883664,"line_start":1416,"line_end":1416,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883669,"byte_end":11883762,"line_start":1417,"line_end":1417,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883767,"byte_end":11883805,"line_start":1418,"line_end":1418,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883810,"byte_end":11883813,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883818,"byte_end":11883832,"line_start":1420,"line_end":1420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883837,"byte_end":11883840,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883845,"byte_end":11883852,"line_start":1422,"line_end":1422,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883857,"byte_end":11883906,"line_start":1423,"line_end":1423,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883911,"byte_end":11883955,"line_start":1424,"line_end":1424,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883960,"byte_end":11883963,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11883968,"byte_end":11883998,"line_start":1426,"line_end":1426,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884003,"byte_end":11884033,"line_start":1427,"line_end":1427,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884038,"byte_end":11884072,"line_start":1428,"line_end":1428,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884077,"byte_end":11884089,"line_start":1429,"line_end":1429,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884094,"byte_end":11884131,"line_start":1430,"line_end":1430,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884136,"byte_end":11884141,"line_start":1431,"line_end":1431,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884146,"byte_end":11884198,"line_start":1432,"line_end":1432,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884203,"byte_end":11884210,"line_start":1433,"line_end":1433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885557,"byte_end":11885566,"line_start":1476,"line_end":1476,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884340,"byte_end":11884369,"line_start":1439,"line_end":1439,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884374,"byte_end":11884377,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884382,"byte_end":11884468,"line_start":1441,"line_end":1441,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884473,"byte_end":11884476,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884481,"byte_end":11884493,"line_start":1443,"line_end":1443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884498,"byte_end":11884501,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884506,"byte_end":11884601,"line_start":1445,"line_end":1445,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884606,"byte_end":11884643,"line_start":1446,"line_end":1446,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884648,"byte_end":11884651,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884656,"byte_end":11884745,"line_start":1448,"line_end":1448,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884750,"byte_end":11884753,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884758,"byte_end":11884832,"line_start":1450,"line_end":1450,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884837,"byte_end":11884840,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884845,"byte_end":11884859,"line_start":1452,"line_end":1452,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884864,"byte_end":11884867,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884872,"byte_end":11884879,"line_start":1454,"line_end":1454,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884884,"byte_end":11884933,"line_start":1455,"line_end":1455,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884938,"byte_end":11884982,"line_start":1456,"line_end":1456,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884987,"byte_end":11884990,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11884995,"byte_end":11885037,"line_start":1458,"line_end":1458,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885042,"byte_end":11885072,"line_start":1459,"line_end":1459,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885077,"byte_end":11885080,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885085,"byte_end":11885123,"line_start":1461,"line_end":1461,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885128,"byte_end":11885140,"line_start":1462,"line_end":1462,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885145,"byte_end":11885175,"line_start":1463,"line_end":1463,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885180,"byte_end":11885210,"line_start":1464,"line_end":1464,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885215,"byte_end":11885256,"line_start":1465,"line_end":1465,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885261,"byte_end":11885279,"line_start":1466,"line_end":1466,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885284,"byte_end":11885328,"line_start":1467,"line_end":1467,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885333,"byte_end":11885338,"line_start":1468,"line_end":1468,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885343,"byte_end":11885346,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885351,"byte_end":11885385,"line_start":1470,"line_end":1470,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885390,"byte_end":11885402,"line_start":1471,"line_end":1471,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885407,"byte_end":11885459,"line_start":1472,"line_end":1472,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885464,"byte_end":11885469,"line_start":1473,"line_end":1473,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885474,"byte_end":11885526,"line_start":1474,"line_end":1474,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885531,"byte_end":11885538,"line_start":1475,"line_end":1475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886956,"byte_end":11886962,"line_start":1513,"line_end":1513,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885684,"byte_end":11885724,"line_start":1481,"line_end":1481,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885729,"byte_end":11885732,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885737,"byte_end":11885832,"line_start":1483,"line_end":1483,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885837,"byte_end":11885840,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885845,"byte_end":11885857,"line_start":1485,"line_end":1485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885862,"byte_end":11885865,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885870,"byte_end":11885955,"line_start":1487,"line_end":1487,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885960,"byte_end":11885963,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11885968,"byte_end":11886059,"line_start":1489,"line_end":1489,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886064,"byte_end":11886113,"line_start":1490,"line_end":1490,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886118,"byte_end":11886121,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886126,"byte_end":11886198,"line_start":1492,"line_end":1492,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886203,"byte_end":11886278,"line_start":1493,"line_end":1493,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886283,"byte_end":11886286,"line_start":1494,"line_end":1494,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886291,"byte_end":11886384,"line_start":1495,"line_end":1495,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886389,"byte_end":11886482,"line_start":1496,"line_end":1496,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886487,"byte_end":11886525,"line_start":1497,"line_end":1497,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886530,"byte_end":11886533,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886538,"byte_end":11886552,"line_start":1499,"line_end":1499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886557,"byte_end":11886560,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886565,"byte_end":11886572,"line_start":1501,"line_end":1501,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886577,"byte_end":11886626,"line_start":1502,"line_end":1502,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886631,"byte_end":11886675,"line_start":1503,"line_end":1503,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886680,"byte_end":11886683,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886688,"byte_end":11886718,"line_start":1505,"line_end":1505,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886723,"byte_end":11886753,"line_start":1506,"line_end":1506,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886758,"byte_end":11886792,"line_start":1507,"line_end":1507,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886797,"byte_end":11886809,"line_start":1508,"line_end":1508,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886814,"byte_end":11886858,"line_start":1509,"line_end":1509,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886863,"byte_end":11886868,"line_start":1510,"line_end":1510,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886873,"byte_end":11886925,"line_start":1511,"line_end":1511,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11886930,"byte_end":11886937,"line_start":1512,"line_end":1512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887822,"byte_end":11887832,"line_start":1546,"line_end":1546,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887152,"byte_end":11887187,"line_start":1522,"line_end":1522,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887192,"byte_end":11887195,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887200,"byte_end":11887212,"line_start":1524,"line_end":1524,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887217,"byte_end":11887220,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887225,"byte_end":11887284,"line_start":1526,"line_end":1526,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887289,"byte_end":11887292,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887297,"byte_end":11887309,"line_start":1528,"line_end":1528,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887314,"byte_end":11887317,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887322,"byte_end":11887409,"line_start":1530,"line_end":1530,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887414,"byte_end":11887447,"line_start":1531,"line_end":1531,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887452,"byte_end":11887455,"line_start":1532,"line_end":1532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887460,"byte_end":11887474,"line_start":1533,"line_end":1533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887479,"byte_end":11887482,"line_start":1534,"line_end":1534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887487,"byte_end":11887494,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887499,"byte_end":11887548,"line_start":1536,"line_end":1536,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887553,"byte_end":11887597,"line_start":1537,"line_end":1537,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887602,"byte_end":11887605,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887610,"byte_end":11887640,"line_start":1539,"line_end":1539,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887645,"byte_end":11887657,"line_start":1540,"line_end":1540,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887662,"byte_end":11887704,"line_start":1541,"line_end":1541,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887709,"byte_end":11887747,"line_start":1542,"line_end":1542,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887752,"byte_end":11887781,"line_start":1543,"line_end":1543,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887786,"byte_end":11887791,"line_start":1544,"line_end":1544,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887796,"byte_end":11887803,"line_start":1545,"line_end":1545,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888657,"byte_end":11888671,"line_start":1573,"line_end":1573,"column_start":19,"column_end":33},"name":"try_into_owned","qualname":"<Shared>::try_into_owned","value":"unsafe fn try_into_owned(Self) -> Option<Owned<T>>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee if it is not null.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee if it is not null.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11887984,"byte_end":11888037,"line_start":1551,"line_end":1551,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888042,"byte_end":11888045,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888050,"byte_end":11888062,"line_start":1553,"line_end":1553,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888067,"byte_end":11888070,"line_start":1554,"line_end":1554,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888075,"byte_end":11888162,"line_start":1555,"line_end":1555,"column_start":5,"column_end":92}},{"value":"/ reference to the same object, or if the pointer is null.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888167,"byte_end":11888227,"line_start":1556,"line_end":1556,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888232,"byte_end":11888235,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888240,"byte_end":11888254,"line_start":1558,"line_end":1558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888259,"byte_end":11888262,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888267,"byte_end":11888274,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888279,"byte_end":11888328,"line_start":1561,"line_end":1561,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888333,"byte_end":11888377,"line_start":1562,"line_end":1562,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888382,"byte_end":11888385,"line_start":1563,"line_end":1563,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888390,"byte_end":11888420,"line_start":1564,"line_end":1564,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888425,"byte_end":11888437,"line_start":1565,"line_end":1565,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888442,"byte_end":11888484,"line_start":1566,"line_end":1566,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888489,"byte_end":11888527,"line_start":1567,"line_end":1567,"column_start":5,"column_end":43}},{"value":"/     if let Some(x) = p.try_into_owned() {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888532,"byte_end":11888577,"line_start":1568,"line_end":1568,"column_start":5,"column_end":50}},{"value":"/         drop(x);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888582,"byte_end":11888602,"line_start":1569,"line_end":1569,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888607,"byte_end":11888616,"line_start":1570,"line_end":1570,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888621,"byte_end":11888626,"line_start":1571,"line_end":1571,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888631,"byte_end":11888638,"line_start":1572,"line_end":1572,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889295,"byte_end":11889298,"line_start":1595,"line_end":1595,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888830,"byte_end":11888876,"line_start":1581,"line_end":1581,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888881,"byte_end":11888884,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888889,"byte_end":11888903,"line_start":1583,"line_end":1583,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888908,"byte_end":11888911,"line_start":1584,"line_end":1584,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888916,"byte_end":11888923,"line_start":1585,"line_end":1585,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888928,"byte_end":11888984,"line_start":1586,"line_end":1586,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11888989,"byte_end":11889033,"line_start":1587,"line_end":1587,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889038,"byte_end":11889041,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889046,"byte_end":11889108,"line_start":1589,"line_end":1589,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889113,"byte_end":11889143,"line_start":1590,"line_end":1590,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889148,"byte_end":11889182,"line_start":1591,"line_end":1591,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889187,"byte_end":11889214,"line_start":1592,"line_end":1592,"column_start":5,"column_end":32}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889219,"byte_end":11889271,"line_start":1593,"line_end":1593,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889276,"byte_end":11889283,"line_start":1594,"line_end":1594,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890029,"byte_end":11890037,"line_start":1619,"line_end":1619,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889394,"byte_end":11889484,"line_start":1600,"line_end":1600,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889489,"byte_end":11889527,"line_start":1601,"line_end":1601,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889532,"byte_end":11889535,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889540,"byte_end":11889554,"line_start":1603,"line_end":1603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889559,"byte_end":11889562,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889567,"byte_end":11889574,"line_start":1605,"line_end":1605,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889579,"byte_end":11889628,"line_start":1606,"line_end":1606,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889633,"byte_end":11889677,"line_start":1607,"line_end":1607,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889682,"byte_end":11889685,"line_start":1608,"line_end":1608,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889690,"byte_end":11889720,"line_start":1609,"line_end":1609,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889725,"byte_end":11889755,"line_start":1610,"line_end":1610,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889760,"byte_end":11889795,"line_start":1611,"line_end":1611,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889800,"byte_end":11889828,"line_start":1612,"line_end":1612,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889833,"byte_end":11889836,"line_start":1613,"line_end":1613,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889841,"byte_end":11889869,"line_start":1614,"line_end":1614,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889874,"byte_end":11889902,"line_start":1615,"line_end":1615,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889907,"byte_end":11889948,"line_start":1616,"line_end":1616,"column_start":5,"column_end":46}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11889953,"byte_end":11890005,"line_start":1617,"line_end":1617,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890010,"byte_end":11890017,"line_start":1618,"line_end":1618,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890601,"byte_end":11890605,"line_start":1640,"line_end":1640,"column_start":8,"column_end":12},"name":"from","qualname":"<Shared as std::convert::From>::from","value":"fn from(*const T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to `raw`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890202,"byte_end":11890246,"line_start":1625,"line_end":1625,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890251,"byte_end":11890254,"line_start":1626,"line_end":1626,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890259,"byte_end":11890271,"line_start":1627,"line_end":1627,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890276,"byte_end":11890279,"line_start":1628,"line_end":1628,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890284,"byte_end":11890328,"line_start":1629,"line_end":1629,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890333,"byte_end":11890336,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890341,"byte_end":11890355,"line_start":1631,"line_end":1631,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890360,"byte_end":11890363,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890368,"byte_end":11890375,"line_start":1633,"line_end":1633,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890380,"byte_end":11890412,"line_start":1634,"line_end":1634,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890417,"byte_end":11890420,"line_start":1635,"line_end":1635,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::from(Box::into_raw(Box::new(1234)) as *const _);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890425,"byte_end":11890493,"line_start":1636,"line_end":1636,"column_start":5,"column_end":73}},{"value":"/ assert!(!p.is_null());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890498,"byte_end":11890524,"line_start":1637,"line_end":1637,"column_start":5,"column_end":31}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890529,"byte_end":11890581,"line_start":1638,"line_end":1638,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890586,"byte_end":11890593,"line_start":1639,"line_end":1639,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890831,"byte_end":11890833,"line_start":1648,"line_end":1648,"column_start":8,"column_end":10},"name":"eq","qualname":"<Shared as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891044,"byte_end":11891055,"line_start":1656,"line_end":1656,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Shared as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891215,"byte_end":11891218,"line_start":1662,"line_end":1662,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Shared as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> cmp::Ordering","parent":{"krate":2,"index":2867},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891369,"byte_end":11891372,"line_start":1668,"line_end":1668,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Shared as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891678,"byte_end":11891681,"line_start":1679,"line_end":1679,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Shared as std::fmt::Pointer>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10134},"children":[],"decl_id":{"krate":2,"index":10135},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891875,"byte_end":11891882,"line_start":1685,"line_end":1685,"column_start":8,"column_end":15},"name":"default","qualname":"<Shared as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893022,"byte_end":11893031,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":374}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11892973,"byte_end":11893010,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893178,"byte_end":11893185,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"default","qualname":"<Collector as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893338,"byte_end":11893341,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893298,"byte_end":11893326,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893446,"byte_end":11893454,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893389,"byte_end":11893434,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893617,"byte_end":11893622,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"clone","qualname":"<Collector as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":" Creates another reference to the same garbage collector.\n","sig":null,"attributes":[{"value":"/ Creates another reference to the same garbage collector.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893549,"byte_end":11893609,"line_start":50,"line_end":50,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893759,"byte_end":11893762,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Collector as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893956,"byte_end":11893958,"line_start":66,"line_end":66,"column_start":8,"column_end":10},"name":"eq","qualname":"<Collector as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Collector) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":" Checks if both handles point to the same collector.\n","sig":null,"attributes":[{"value":"/ Checks if both handles point to the same collector.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893893,"byte_end":11893948,"line_start":65,"line_end":65,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894122,"byte_end":11894133,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":390}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894074,"byte_end":11894110,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894244,"byte_end":11894247,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894198,"byte_end":11894218,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894223,"byte_end":11894232,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894385,"byte_end":11894394,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894316,"byte_end":11894359,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894364,"byte_end":11894373,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894550,"byte_end":11894559,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894468,"byte_end":11894524,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894529,"byte_end":11894538,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894686,"byte_end":11894690,"line_start":99,"line_end":99,"column_start":8,"column_end":12},"name":"drop","qualname":"<LocalHandle as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894669,"byte_end":11894678,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894830,"byte_end":11894833,"line_start":107,"line_end":107,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LocalHandle as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915493,"byte_end":11915498,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":480}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11913724,"byte_end":11913773,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11913774,"byte_end":11913777,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11913778,"byte_end":11913791,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11913792,"byte_end":11913795,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11913796,"byte_end":11913875,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11913876,"byte_end":11913879,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11913880,"byte_end":11913887,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11913888,"byte_end":11913921,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11913922,"byte_end":11913925,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11913926,"byte_end":11914024,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914025,"byte_end":11914117,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914118,"byte_end":11914148,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914149,"byte_end":11914156,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914157,"byte_end":11914160,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914161,"byte_end":11914237,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914238,"byte_end":11914241,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914242,"byte_end":11914269,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914270,"byte_end":11914273,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914274,"byte_end":11914361,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914362,"byte_end":11914378,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914379,"byte_end":11914382,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914383,"byte_end":11914390,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914391,"byte_end":11914440,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914441,"byte_end":11914485,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914486,"byte_end":11914489,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914490,"byte_end":11914528,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914529,"byte_end":11914558,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914559,"byte_end":11914562,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914563,"byte_end":11914593,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914594,"byte_end":11914624,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914625,"byte_end":11914628,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914629,"byte_end":11914703,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914704,"byte_end":11914738,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914739,"byte_end":11914742,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914743,"byte_end":11914794,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914795,"byte_end":11914841,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914842,"byte_end":11914885,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914886,"byte_end":11914891,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914892,"byte_end":11914944,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914945,"byte_end":11914952,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914953,"byte_end":11914956,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914957,"byte_end":11914978,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914979,"byte_end":11914982,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11914983,"byte_end":11915078,"line_start":54,"line_end":54,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915079,"byte_end":11915177,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915178,"byte_end":11915197,"line_start":56,"line_end":56,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915198,"byte_end":11915201,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915202,"byte_end":11915209,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915210,"byte_end":11915243,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915244,"byte_end":11915247,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915248,"byte_end":11915278,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915279,"byte_end":11915309,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915310,"byte_end":11915342,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915343,"byte_end":11915360,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915361,"byte_end":11915393,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915394,"byte_end":11915411,"line_start":66,"line_end":66,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915412,"byte_end":11915445,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915446,"byte_end":11915453,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915454,"byte_end":11915457,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915458,"byte_end":11915481,"line_start":70,"line_end":70,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916473,"byte_end":11916478,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915557,"byte_end":11915646,"line_start":76,"line_end":76,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915651,"byte_end":11915676,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915681,"byte_end":11915684,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915689,"byte_end":11915782,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915787,"byte_end":11915875,"line_start":80,"line_end":80,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915880,"byte_end":11915970,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915975,"byte_end":11916015,"line_start":82,"line_end":82,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916020,"byte_end":11916023,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916028,"byte_end":11916118,"line_start":84,"line_end":84,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916123,"byte_end":11916214,"line_start":85,"line_end":85,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916219,"byte_end":11916306,"line_start":86,"line_end":86,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916311,"byte_end":11916331,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916336,"byte_end":11916339,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916344,"byte_end":11916431,"line_start":89,"line_end":89,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916436,"byte_end":11916461,"line_start":90,"line_end":90,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920835,"byte_end":11920850,"line_start":190,"line_end":190,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916642,"byte_end":11916731,"line_start":101,"line_end":101,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916736,"byte_end":11916761,"line_start":102,"line_end":102,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916766,"byte_end":11916769,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916774,"byte_end":11916867,"line_start":104,"line_end":104,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916872,"byte_end":11916960,"line_start":105,"line_end":105,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11916965,"byte_end":11917055,"line_start":106,"line_end":106,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917060,"byte_end":11917100,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917105,"byte_end":11917108,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917113,"byte_end":11917203,"line_start":109,"line_end":109,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917208,"byte_end":11917299,"line_start":110,"line_end":110,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917304,"byte_end":11917391,"line_start":111,"line_end":111,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917396,"byte_end":11917416,"line_start":112,"line_end":112,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917421,"byte_end":11917424,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917429,"byte_end":11917516,"line_start":114,"line_end":114,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917521,"byte_end":11917546,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917551,"byte_end":11917554,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917559,"byte_end":11917571,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917576,"byte_end":11917579,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917584,"byte_end":11917676,"line_start":119,"line_end":119,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917681,"byte_end":11917768,"line_start":120,"line_end":120,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917773,"byte_end":11917785,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917790,"byte_end":11917793,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917798,"byte_end":11917805,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917810,"byte_end":11917843,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917848,"byte_end":11917851,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917856,"byte_end":11917886,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917891,"byte_end":11917918,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917923,"byte_end":11917935,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11917940,"byte_end":11918015,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918020,"byte_end":11918059,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918064,"byte_end":11918100,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918105,"byte_end":11918116,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918121,"byte_end":11918126,"line_start":133,"line_end":133,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918131,"byte_end":11918138,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918143,"byte_end":11918146,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918151,"byte_end":11918245,"line_start":136,"line_end":136,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918250,"byte_end":11918281,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918286,"byte_end":11918289,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918294,"byte_end":11918389,"line_start":139,"line_end":139,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918394,"byte_end":11918486,"line_start":140,"line_end":140,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918491,"byte_end":11918580,"line_start":141,"line_end":141,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918585,"byte_end":11918588,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918593,"byte_end":11918606,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918611,"byte_end":11918664,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918669,"byte_end":11918751,"line_start":145,"line_end":145,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918756,"byte_end":11918763,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918768,"byte_end":11918771,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918776,"byte_end":11918869,"line_start":148,"line_end":148,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918874,"byte_end":11918969,"line_start":149,"line_end":149,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11918974,"byte_end":11919034,"line_start":150,"line_end":150,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919039,"byte_end":11919042,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919047,"byte_end":11919061,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919066,"byte_end":11919069,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919074,"byte_end":11919160,"line_start":154,"line_end":154,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919165,"byte_end":11919259,"line_start":155,"line_end":155,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919264,"byte_end":11919360,"line_start":156,"line_end":156,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919365,"byte_end":11919457,"line_start":157,"line_end":157,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919462,"byte_end":11919518,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919523,"byte_end":11919526,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919531,"byte_end":11919538,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919543,"byte_end":11919599,"line_start":161,"line_end":161,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919604,"byte_end":11919648,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919653,"byte_end":11919656,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919661,"byte_end":11919692,"line_start":164,"line_end":164,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919697,"byte_end":11919700,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919705,"byte_end":11919782,"line_start":166,"line_end":166,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919787,"byte_end":11919818,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919823,"byte_end":11919826,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919831,"byte_end":11919861,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919866,"byte_end":11919896,"line_start":170,"line_end":170,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919901,"byte_end":11919904,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919909,"byte_end":11919986,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11919991,"byte_end":11920063,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920068,"byte_end":11920071,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920076,"byte_end":11920097,"line_start":175,"line_end":175,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920102,"byte_end":11920162,"line_start":176,"line_end":176,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920167,"byte_end":11920249,"line_start":177,"line_end":177,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920254,"byte_end":11920270,"line_start":178,"line_end":178,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920275,"byte_end":11920354,"line_start":179,"line_end":179,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920359,"byte_end":11920402,"line_start":180,"line_end":180,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920407,"byte_end":11920475,"line_start":181,"line_end":181,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920480,"byte_end":11920572,"line_start":182,"line_end":182,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920577,"byte_end":11920661,"line_start":183,"line_end":183,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920666,"byte_end":11920703,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920708,"byte_end":11920723,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920728,"byte_end":11920737,"line_start":186,"line_end":186,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920742,"byte_end":11920747,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920752,"byte_end":11920804,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11920809,"byte_end":11920816,"line_start":189,"line_end":189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924494,"byte_end":11924507,"line_start":270,"line_end":270,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11921089,"byte_end":11921182,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11921187,"byte_end":11921239,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11921244,"byte_end":11921247,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11921252,"byte_end":11921345,"line_start":204,"line_end":204,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11921350,"byte_end":11921440,"line_start":205,"line_end":205,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11921445,"byte_end":11921534,"line_start":206,"line_end":206,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11921539,"byte_end":11921593,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11921598,"byte_end":11921601,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11921606,"byte_end":11921699,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11921704,"byte_end":11921797,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11921802,"byte_end":11921895,"line_start":211,"line_end":211,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11921900,"byte_end":11921931,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11921936,"byte_end":11921939,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11921944,"byte_end":11922033,"line_start":214,"line_end":214,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922038,"byte_end":11922063,"line_start":215,"line_end":215,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922068,"byte_end":11922071,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922076,"byte_end":11922088,"line_start":217,"line_end":217,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922093,"byte_end":11922096,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922101,"byte_end":11922194,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922199,"byte_end":11922232,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922237,"byte_end":11922240,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922245,"byte_end":11922340,"line_start":222,"line_end":222,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922345,"byte_end":11922383,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922388,"byte_end":11922391,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922396,"byte_end":11922491,"line_start":225,"line_end":225,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922496,"byte_end":11922588,"line_start":226,"line_end":226,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922593,"byte_end":11922682,"line_start":227,"line_end":227,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922687,"byte_end":11922690,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922695,"byte_end":11922708,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922713,"byte_end":11922766,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922771,"byte_end":11922830,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922835,"byte_end":11922842,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922847,"byte_end":11922850,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922855,"byte_end":11922949,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11922954,"byte_end":11923041,"line_start":235,"line_end":235,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923046,"byte_end":11923106,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923111,"byte_end":11923114,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923119,"byte_end":11923133,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923138,"byte_end":11923141,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923146,"byte_end":11923232,"line_start":240,"line_end":240,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923237,"byte_end":11923331,"line_start":241,"line_end":241,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923336,"byte_end":11923432,"line_start":242,"line_end":242,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923437,"byte_end":11923529,"line_start":243,"line_end":243,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923534,"byte_end":11923590,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923595,"byte_end":11923598,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923603,"byte_end":11923610,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923615,"byte_end":11923671,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923676,"byte_end":11923720,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923725,"byte_end":11923728,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923733,"byte_end":11923764,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923769,"byte_end":11923772,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923777,"byte_end":11923854,"line_start":252,"line_end":252,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923859,"byte_end":11923890,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923895,"byte_end":11923898,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923903,"byte_end":11923933,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923938,"byte_end":11923968,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923973,"byte_end":11923976,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11923981,"byte_end":11924058,"line_start":258,"line_end":258,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924063,"byte_end":11924135,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924140,"byte_end":11924143,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924148,"byte_end":11924169,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924174,"byte_end":11924234,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924239,"byte_end":11924321,"line_start":263,"line_end":263,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924326,"byte_end":11924342,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924347,"byte_end":11924382,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924387,"byte_end":11924396,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924401,"byte_end":11924406,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924411,"byte_end":11924463,"line_start":268,"line_end":268,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924468,"byte_end":11924475,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925392,"byte_end":11925397,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924607,"byte_end":11924702,"line_start":274,"line_end":274,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924707,"byte_end":11924724,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924729,"byte_end":11924732,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924737,"byte_end":11924831,"line_start":277,"line_end":277,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924836,"byte_end":11924928,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11924933,"byte_end":11925001,"line_start":279,"line_end":279,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925006,"byte_end":11925009,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925014,"byte_end":11925106,"line_start":281,"line_end":281,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925111,"byte_end":11925114,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925119,"byte_end":11925133,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925138,"byte_end":11925141,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925146,"byte_end":11925153,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925158,"byte_end":11925191,"line_start":286,"line_end":286,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925196,"byte_end":11925199,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925204,"byte_end":11925234,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925239,"byte_end":11925264,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925269,"byte_end":11925333,"line_start":290,"line_end":290,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925338,"byte_end":11925345,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925350,"byte_end":11925368,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925373,"byte_end":11925380,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926616,"byte_end":11926621,"line_start":328,"line_end":328,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925521,"byte_end":11925572,"line_start":300,"line_end":300,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925577,"byte_end":11925580,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925585,"byte_end":11925675,"line_start":302,"line_end":302,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925680,"byte_end":11925774,"line_start":303,"line_end":303,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925779,"byte_end":11925873,"line_start":304,"line_end":304,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925878,"byte_end":11925930,"line_start":305,"line_end":305,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925935,"byte_end":11925938,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11925943,"byte_end":11926036,"line_start":307,"line_end":307,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926041,"byte_end":11926044,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926049,"byte_end":11926063,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926068,"byte_end":11926071,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926076,"byte_end":11926083,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926088,"byte_end":11926137,"line_start":312,"line_end":312,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926142,"byte_end":11926186,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926191,"byte_end":11926194,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926199,"byte_end":11926228,"line_start":315,"line_end":315,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926233,"byte_end":11926266,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926271,"byte_end":11926276,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926281,"byte_end":11926320,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926325,"byte_end":11926379,"line_start":319,"line_end":319,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926384,"byte_end":11926389,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926394,"byte_end":11926412,"line_start":321,"line_end":321,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926417,"byte_end":11926422,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926427,"byte_end":11926466,"line_start":323,"line_end":323,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926471,"byte_end":11926525,"line_start":324,"line_end":324,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926530,"byte_end":11926535,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926540,"byte_end":11926592,"line_start":326,"line_end":326,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926597,"byte_end":11926604,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11928005,"byte_end":11928016,"line_start":365,"line_end":365,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926745,"byte_end":11926836,"line_start":334,"line_end":334,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926841,"byte_end":11926844,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926849,"byte_end":11926940,"line_start":336,"line_end":336,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11926945,"byte_end":11927041,"line_start":337,"line_end":337,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927046,"byte_end":11927140,"line_start":338,"line_end":338,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927145,"byte_end":11927164,"line_start":339,"line_end":339,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927169,"byte_end":11927172,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927177,"byte_end":11927271,"line_start":341,"line_end":341,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927276,"byte_end":11927318,"line_start":342,"line_end":342,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927323,"byte_end":11927326,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927331,"byte_end":11927345,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927350,"byte_end":11927353,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927358,"byte_end":11927365,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927370,"byte_end":11927419,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927424,"byte_end":11927468,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927473,"byte_end":11927493,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927498,"byte_end":11927526,"line_start":350,"line_end":350,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927531,"byte_end":11927534,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927539,"byte_end":11927568,"line_start":352,"line_end":352,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927573,"byte_end":11927606,"line_start":353,"line_end":353,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927611,"byte_end":11927616,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927621,"byte_end":11927660,"line_start":355,"line_end":355,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927665,"byte_end":11927719,"line_start":356,"line_end":356,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927724,"byte_end":11927729,"line_start":357,"line_end":357,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927734,"byte_end":11927801,"line_start":358,"line_end":358,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927806,"byte_end":11927811,"line_start":359,"line_end":359,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927816,"byte_end":11927855,"line_start":360,"line_end":360,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927860,"byte_end":11927914,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927919,"byte_end":11927924,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927929,"byte_end":11927981,"line_start":363,"line_end":363,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11927986,"byte_end":11927993,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929162,"byte_end":11929171,"line_start":403,"line_end":403,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11928621,"byte_end":11928676,"line_start":387,"line_end":387,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11928681,"byte_end":11928684,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11928689,"byte_end":11928764,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11928769,"byte_end":11928819,"line_start":390,"line_end":390,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11928824,"byte_end":11928827,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11928832,"byte_end":11928916,"line_start":392,"line_end":392,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11928921,"byte_end":11928924,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11928929,"byte_end":11928943,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11928948,"byte_end":11928951,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11928956,"byte_end":11928963,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11928968,"byte_end":11929001,"line_start":397,"line_end":397,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929006,"byte_end":11929009,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929014,"byte_end":11929044,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929049,"byte_end":11929079,"line_start":400,"line_end":400,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929084,"byte_end":11929138,"line_start":401,"line_end":401,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929143,"byte_end":11929150,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929325,"byte_end":11929329,"line_start":410,"line_end":410,"column_start":8,"column_end":12},"name":"drop","qualname":"<Guard as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929308,"byte_end":11929317,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929486,"byte_end":11929489,"line_start":418,"line_end":418,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Guard as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932523,"byte_end":11932534,"line_start":510,"line_end":510,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929581,"byte_end":11929668,"line_start":423,"line_end":423,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929669,"byte_end":11929672,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929673,"byte_end":11929768,"line_start":425,"line_end":425,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929769,"byte_end":11929858,"line_start":426,"line_end":426,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929859,"byte_end":11929862,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929863,"byte_end":11929956,"line_start":428,"line_end":428,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929957,"byte_end":11929994,"line_start":429,"line_end":429,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929995,"byte_end":11929998,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929999,"byte_end":11930095,"line_start":431,"line_end":431,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930096,"byte_end":11930099,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930100,"byte_end":11930112,"line_start":433,"line_end":433,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930113,"byte_end":11930116,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930117,"byte_end":11930207,"line_start":435,"line_end":435,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930208,"byte_end":11930275,"line_start":436,"line_end":436,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930276,"byte_end":11930279,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930280,"byte_end":11930294,"line_start":438,"line_end":438,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930295,"byte_end":11930298,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930299,"byte_end":11930306,"line_start":440,"line_end":440,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930307,"byte_end":11930356,"line_start":441,"line_end":441,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930357,"byte_end":11930402,"line_start":442,"line_end":442,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930403,"byte_end":11930406,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930407,"byte_end":11930434,"line_start":444,"line_end":444,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930435,"byte_end":11930438,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930439,"byte_end":11930451,"line_start":446,"line_end":446,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930452,"byte_end":11930507,"line_start":447,"line_end":447,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930508,"byte_end":11930554,"line_start":448,"line_end":448,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930555,"byte_end":11930558,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930559,"byte_end":11930633,"line_start":450,"line_end":450,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930634,"byte_end":11930684,"line_start":451,"line_end":451,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930685,"byte_end":11930688,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930689,"byte_end":11930718,"line_start":453,"line_end":453,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930719,"byte_end":11930775,"line_start":454,"line_end":454,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930776,"byte_end":11930787,"line_start":455,"line_end":455,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930788,"byte_end":11930791,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930792,"byte_end":11930873,"line_start":457,"line_end":457,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930874,"byte_end":11930879,"line_start":458,"line_end":458,"column_start":1,"column_end":6}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930880,"byte_end":11930932,"line_start":459,"line_end":459,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930933,"byte_end":11930940,"line_start":460,"line_end":460,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930941,"byte_end":11930944,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11930945,"byte_end":11931039,"line_start":462,"line_end":462,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931040,"byte_end":11931043,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931044,"byte_end":11931138,"line_start":464,"line_end":464,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931139,"byte_end":11931224,"line_start":465,"line_end":465,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931225,"byte_end":11931228,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931229,"byte_end":11931328,"line_start":467,"line_end":467,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931329,"byte_end":11931427,"line_start":468,"line_end":468,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931428,"byte_end":11931448,"line_start":469,"line_end":469,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931449,"byte_end":11931452,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931453,"byte_end":11931460,"line_start":471,"line_end":471,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931461,"byte_end":11931510,"line_start":472,"line_end":472,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931511,"byte_end":11931542,"line_start":473,"line_end":473,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931543,"byte_end":11931588,"line_start":474,"line_end":474,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931589,"byte_end":11931592,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931593,"byte_end":11931614,"line_start":476,"line_end":476,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931615,"byte_end":11931645,"line_start":477,"line_end":477,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931646,"byte_end":11931651,"line_start":478,"line_end":478,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931652,"byte_end":11931655,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931656,"byte_end":11931676,"line_start":480,"line_end":480,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931677,"byte_end":11931707,"line_start":481,"line_end":481,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931708,"byte_end":11931738,"line_start":482,"line_end":482,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931739,"byte_end":11931744,"line_start":483,"line_end":483,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931745,"byte_end":11931748,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931749,"byte_end":11931780,"line_start":485,"line_end":485,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931781,"byte_end":11931809,"line_start":486,"line_end":486,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931810,"byte_end":11931830,"line_start":487,"line_end":487,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931831,"byte_end":11931867,"line_start":488,"line_end":488,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931868,"byte_end":11931945,"line_start":489,"line_end":489,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931946,"byte_end":11931949,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11931950,"byte_end":11932001,"line_start":491,"line_end":491,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932002,"byte_end":11932042,"line_start":492,"line_end":492,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932043,"byte_end":11932117,"line_start":493,"line_end":493,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932118,"byte_end":11932121,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932122,"byte_end":11932210,"line_start":495,"line_end":495,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932211,"byte_end":11932261,"line_start":496,"line_end":496,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932262,"byte_end":11932314,"line_start":497,"line_end":497,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932315,"byte_end":11932343,"line_start":498,"line_end":498,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932344,"byte_end":11932347,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932348,"byte_end":11932380,"line_start":500,"line_end":500,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932381,"byte_end":11932398,"line_start":501,"line_end":501,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932399,"byte_end":11932412,"line_start":502,"line_end":502,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932413,"byte_end":11932422,"line_start":503,"line_end":503,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932423,"byte_end":11932428,"line_start":504,"line_end":504,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932429,"byte_end":11932436,"line_start":505,"line_end":505,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932437,"byte_end":11932440,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932441,"byte_end":11932470,"line_start":507,"line_end":507,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932471,"byte_end":11932498,"line_start":508,"line_end":508,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932499,"byte_end":11932508,"line_start":509,"line_end":509,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":11985946,"byte_end":11985949,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":11985900,"byte_end":11985928,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":11985929,"byte_end":11985938,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":895},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":11986074,"byte_end":11986083,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":11986005,"byte_end":11986056,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":11986057,"byte_end":11986066,"line_start":36,"line_end":36,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":897},"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":11986193,"byte_end":11986210,"line_start":42,"line_end":42,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":11986144,"byte_end":11986185,"line_start":41,"line_end":41,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838542,"byte_end":11838562,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839989,"byte_end":11839997,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843771,"byte_end":11843772,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11846993,"byte_end":11846999,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847064,"byte_end":11847070,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847086,"byte_end":11847092,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847482,"byte_end":11847488,"line_start":315,"line_end":315,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":191},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11871135,"byte_end":11871141,"line_start":942,"line_end":942,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11871488,"byte_end":11871494,"line_start":954,"line_end":954,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11871782,"byte_end":11871788,"line_start":962,"line_end":962,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872135,"byte_end":11872141,"line_start":973,"line_end":973,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872253,"byte_end":11872259,"line_start":979,"line_end":979,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872711,"byte_end":11872717,"line_start":997,"line_end":997,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872820,"byte_end":11872826,"line_start":1003,"line_end":1003,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872946,"byte_end":11872952,"line_start":1009,"line_end":1009,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873301,"byte_end":11873307,"line_start":1024,"line_end":1024,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874520,"byte_end":11874525,"line_start":1065,"line_end":1065,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875032,"byte_end":11875037,"line_start":1088,"line_end":1088,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876687,"byte_end":11876692,"line_start":1148,"line_end":1148,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878419,"byte_end":11878424,"line_start":1212,"line_end":1212,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878614,"byte_end":11878619,"line_start":1221,"line_end":1221,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878897,"byte_end":11878902,"line_start":1232,"line_end":1232,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879043,"byte_end":11879048,"line_start":1238,"line_end":1238,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879241,"byte_end":11879246,"line_start":1247,"line_end":1247,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879412,"byte_end":11879417,"line_start":1254,"line_end":1254,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879507,"byte_end":11879512,"line_start":1260,"line_end":1260,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879985,"byte_end":11879990,"line_start":1279,"line_end":1279,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880100,"byte_end":11880105,"line_start":1285,"line_end":1285,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880227,"byte_end":11880232,"line_start":1291,"line_end":1291,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880338,"byte_end":11880343,"line_start":1297,"line_end":1297,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880844,"byte_end":11880850,"line_start":1314,"line_end":1314,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881024,"byte_end":11881030,"line_start":1323,"line_end":1323,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881085,"byte_end":11881091,"line_start":1325,"line_end":1325,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881337,"byte_end":11881343,"line_start":1340,"line_end":1340,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882031,"byte_end":11882037,"line_start":1364,"line_end":1364,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890182,"byte_end":11890188,"line_start":1624,"line_end":1624,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890808,"byte_end":11890814,"line_start":1647,"line_end":1647,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890941,"byte_end":11890947,"line_start":1653,"line_end":1653,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891021,"byte_end":11891027,"line_start":1655,"line_end":1655,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891192,"byte_end":11891198,"line_start":1661,"line_end":1661,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891346,"byte_end":11891352,"line_start":1667,"line_end":1667,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891655,"byte_end":11891661,"line_start":1678,"line_end":1678,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891852,"byte_end":11891858,"line_start":1684,"line_end":1684,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893094,"byte_end":11893103,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893128,"byte_end":11893137,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893159,"byte_end":11893168,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893282,"byte_end":11893291,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893533,"byte_end":11893542,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893740,"byte_end":11893749,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893877,"byte_end":11893886,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894060,"byte_end":11894069,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894180,"byte_end":11894191,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894651,"byte_end":11894662,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894809,"byte_end":11894820,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/deferred.rs","byte_start":11905567,"byte_end":11905575,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/deferred.rs","byte_start":11905699,"byte_end":11905707,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/epoch.rs","byte_start":11909792,"byte_end":11909797,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/epoch.rs","byte_start":11911601,"byte_end":11911612,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915545,"byte_end":11915550,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929296,"byte_end":11929301,"line_start":408,"line_end":408,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929471,"byte_end":11929476,"line_start":417,"line_end":417,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932813,"byte_end":11932825,"line_start":515,"line_end":515,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11935981,"byte_end":11935984,"line_start":72,"line_end":72,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11935994,"byte_end":11935997,"line_start":74,"line_end":74,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11936946,"byte_end":11936949,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11937101,"byte_end":11937104,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11937493,"byte_end":11937496,"line_start":130,"line_end":130,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11937903,"byte_end":11937912,"line_start":146,"line_end":146,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11937922,"byte_end":11937931,"line_start":148,"line_end":148,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11938613,"byte_end":11938619,"line_start":169,"line_end":169,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11943842,"byte_end":11943847,"line_start":311,"line_end":311,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11952634,"byte_end":11952639,"line_start":538,"line_end":538,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":11958704,"byte_end":11958709,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":11958845,"byte_end":11958850,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":11959363,"byte_end":11959367,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":11961950,"byte_end":11961954,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":11962486,"byte_end":11962490,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":11972311,"byte_end":11972316,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":11972353,"byte_end":11972358,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":11972374,"byte_end":11972379,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":11978299,"byte_end":11978304,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11838542,"byte_end":11838562,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11839989,"byte_end":11839997,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":40758},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11843771,"byte_end":11843772,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":137},"to":{"krate":0,"index":127}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11846993,"byte_end":11846999,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847064,"byte_end":11847070,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847086,"byte_end":11847092,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11847482,"byte_end":11847488,"line_start":315,"line_end":315,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11871135,"byte_end":11871141,"line_start":942,"line_end":942,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11871488,"byte_end":11871494,"line_start":954,"line_end":954,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":10134}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11871782,"byte_end":11871788,"line_start":962,"line_end":962,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872135,"byte_end":11872141,"line_start":973,"line_end":973,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872253,"byte_end":11872259,"line_start":979,"line_end":979,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872711,"byte_end":11872717,"line_start":997,"line_end":997,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872820,"byte_end":11872826,"line_start":1003,"line_end":1003,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11872946,"byte_end":11872952,"line_start":1009,"line_end":1009,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11873301,"byte_end":11873307,"line_start":1024,"line_end":1024,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11874520,"byte_end":11874525,"line_start":1065,"line_end":1065,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":247},"to":{"krate":0,"index":243}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11875032,"byte_end":11875037,"line_start":1088,"line_end":1088,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11876687,"byte_end":11876692,"line_start":1148,"line_end":1148,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878419,"byte_end":11878424,"line_start":1212,"line_end":1212,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878614,"byte_end":11878619,"line_start":1221,"line_end":1221,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11878897,"byte_end":11878902,"line_start":1232,"line_end":1232,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879043,"byte_end":11879048,"line_start":1238,"line_end":1238,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879241,"byte_end":11879246,"line_start":1247,"line_end":1247,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879412,"byte_end":11879417,"line_start":1254,"line_end":1254,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879507,"byte_end":11879512,"line_start":1260,"line_end":1260,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11879985,"byte_end":11879990,"line_start":1279,"line_end":1279,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2776}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880100,"byte_end":11880105,"line_start":1285,"line_end":1285,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2779}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880227,"byte_end":11880232,"line_start":1291,"line_end":1291,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880338,"byte_end":11880343,"line_start":1297,"line_end":1297,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3079}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11880844,"byte_end":11880850,"line_start":1314,"line_end":1314,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881024,"byte_end":11881030,"line_start":1323,"line_end":1323,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881085,"byte_end":11881091,"line_start":1325,"line_end":1325,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":301},"to":{"krate":0,"index":243}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11881337,"byte_end":11881343,"line_start":1340,"line_end":1340,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11882031,"byte_end":11882037,"line_start":1364,"line_end":1364,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890182,"byte_end":11890188,"line_start":1624,"line_end":1624,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890808,"byte_end":11890814,"line_start":1647,"line_end":1647,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11890941,"byte_end":11890947,"line_start":1653,"line_end":1653,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891021,"byte_end":11891027,"line_start":1655,"line_end":1655,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891192,"byte_end":11891198,"line_start":1661,"line_end":1661,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891346,"byte_end":11891352,"line_start":1667,"line_end":1667,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891655,"byte_end":11891661,"line_start":1678,"line_end":1678,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":10134}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":11891852,"byte_end":11891858,"line_start":1684,"line_end":1684,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893094,"byte_end":11893103,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893128,"byte_end":11893137,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893159,"byte_end":11893168,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893282,"byte_end":11893291,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893533,"byte_end":11893542,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893740,"byte_end":11893749,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11893877,"byte_end":11893886,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894060,"byte_end":11894069,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894180,"byte_end":11894191,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894651,"byte_end":11894662,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":389},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":11894809,"byte_end":11894820,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":389},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/deferred.rs","byte_start":11905567,"byte_end":11905575,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/deferred.rs","byte_start":11905699,"byte_end":11905707,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/epoch.rs","byte_start":11909792,"byte_end":11909797,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/epoch.rs","byte_start":11911601,"byte_end":11911612,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11915545,"byte_end":11915550,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929296,"byte_end":11929301,"line_start":408,"line_end":408,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11929471,"byte_end":11929476,"line_start":417,"line_end":417,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":11932813,"byte_end":11932825,"line_start":515,"line_end":515,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":504},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11935981,"byte_end":11935984,"line_start":72,"line_end":72,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11935994,"byte_end":11935997,"line_start":74,"line_end":74,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11936946,"byte_end":11936949,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11937101,"byte_end":11937104,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11937493,"byte_end":11937496,"line_start":130,"line_end":130,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11937903,"byte_end":11937912,"line_start":146,"line_end":146,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11937922,"byte_end":11937931,"line_start":148,"line_end":148,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11938613,"byte_end":11938619,"line_start":169,"line_end":169,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11943842,"byte_end":11943847,"line_start":311,"line_end":311,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":11952634,"byte_end":11952639,"line_start":538,"line_end":538,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":624},"to":{"krate":0,"index":683}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":11958704,"byte_end":11958709,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":11958845,"byte_end":11958850,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":11959363,"byte_end":11959367,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":11961950,"byte_end":11961954,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":851},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":11962486,"byte_end":11962490,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":11972311,"byte_end":11972316,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":11972353,"byte_end":11972358,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":11972374,"byte_end":11972379,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brandoncook/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":11978299,"byte_end":11978304,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":3422}}]}